digraph G {
concentrate=true;
splines="ortho";
rankdir="LR";
subgraph legend{
    rank = min;
    label = "legend";
    Legend [shape=none, margin=0, label = <
        <table cellspacing="0" cellpadding="0" border="1"><tr><td>Code2flow Legend</td></tr><tr><td>
        <table cellspacing="0">
        <tr><td>Regular function</td><td width="50px" bgcolor='#cccccc'></td></tr>
        <tr><td>Trunk function (nothing calls this)</td><td bgcolor='#966F33'></td></tr>
        <tr><td>Leaf function (this calls nothing else)</td><td bgcolor='#6db33f'></td></tr>
        <tr><td>Function call</td><td><font color='black'>&#8594;</font></td></tr>
        </table></td></tr></table>
        >];
}node_a8065a13 [label="4335: __eq__()" name="test_multiarray::PriorityNdarray.__eq__" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_f88d0d85 [label="4330: __ge__()" name="test_multiarray::PriorityNdarray.__ge__" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_29a6d267 [label="4320: __gt__()" name="test_multiarray::PriorityNdarray.__gt__" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_b6d27c75 [label="4312: __init__()" name="test_multiarray::PriorityNdarray.__init__" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_7a5311e0 [label="4325: __le__()" name="test_multiarray::PriorityNdarray.__le__" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_d0ed4481 [label="4315: __lt__()" name="test_multiarray::PriorityNdarray.__lt__" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_b78ca35e [label="4340: __ne__()" name="test_multiarray::PriorityNdarray.__ne__" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_242ae502 [label="4419: test_eq()" name="test_multiarray::TestArrayPriority.test_eq" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_36402c2e [label="4401: test_ge()" name="test_multiarray::TestArrayPriority.test_ge" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_23ae11c4 [label="4365: test_gt()" name="test_multiarray::TestArrayPriority.test_gt" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_b2774ce8 [label="4383: test_le()" name="test_multiarray::TestArrayPriority.test_le" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_d11facf3 [label="4347: test_lt()" name="test_multiarray::TestArrayPriority.test_lt" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_2952fdbd [label="4437: test_ne()" name="test_multiarray::TestArrayPriority.test_ne" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_91bf0c2a [label="796: check_count_nonzero()" name="test_multiarray::TestBool.check_count_nonzero" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_9039a793 [label="811: test_count_nonzero()" name="test_multiarray::TestBool.test_count_nonzero" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_b31e0ca2 [label="817: test_count_nonzero_all()" name="test_multiarray::TestBool.test_count_nonzero_all" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_72cd6ca0 [label="2485: _check_range()" name="test_multiarray::TestClip._check_range" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_23052cee [label="2489: _clip_type()" name="test_multiarray::TestClip._clip_type" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_58c31e2e [label="2518: test_basic()" name="test_multiarray::TestClip.test_basic" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_f41ea1b5 [label="2530: test_record_array()" name="test_multiarray::TestClip.test_record_array" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_b064baba [label="2807: _check_from()" name="test_multiarray::TestIO._check_from" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_a050bff6 [label="2875: test_ascii()" name="test_multiarray::TestIO.test_ascii" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_2db625df [label="2830: test_binary()" name="test_multiarray::TestIO.test_binary" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_40ee9874 [label="2863: test_counted_string()" name="test_multiarray::TestIO.test_counted_string" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_c4cb35f7 [label="2871: test_counted_string_with_ws()" name="test_multiarray::TestIO.test_counted_string_with_ws" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_dd69438d [label="2885: test_dtype()" name="test_multiarray::TestIO.test_dtype" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_80a36e58 [label="2822: test_inf()" name="test_multiarray::TestIO.test_inf" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_2fcde544 [label="2882: test_long_sep()" name="test_multiarray::TestIO.test_long_sep" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_01245baf [label="2879: test_malformed()" name="test_multiarray::TestIO.test_malformed" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_6ddabfc1 [label="2817: test_nan()" name="test_multiarray::TestIO.test_nan" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_097125be [label="2826: test_numbers()" name="test_multiarray::TestIO.test_numbers" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_a160d1cf [label="2860: test_string()" name="test_multiarray::TestIO.test_string" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_56486ab6 [label="2868: test_string_with_ws()" name="test_multiarray::TestIO.test_string_with_ws" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_040b0fa2 [label="1591: assert_partitioned()" name="test_multiarray::TestMethods.assert_partitioned" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_aac2e39b [label="1713: test_argpartition_gh5524()" name="test_multiarray::TestMethods.test_argpartition_gh5524" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_763ea847 [label="1600: test_partition_iterative()" name="test_multiarray::TestMethods.test_partition_iterative" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_7ee1d003 [label="3622: _test_circular()" name="test_multiarray::TestNeighborhoodIter._test_circular" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_b800c776 [label="3607: _test_mirror()" name="test_multiarray::TestNeighborhoodIter._test_mirror" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_dfc69f05 [label="3568: _test_mirror2d()" name="test_multiarray::TestNeighborhoodIter._test_mirror2d" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_59d26324 [label="3585: _test_simple()" name="test_multiarray::TestNeighborhoodIter._test_simple" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_5b0ad0bc [label="3535: _test_simple2d()" name="test_multiarray::TestNeighborhoodIter._test_simple2d" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_74bef057 [label="3629: test_circular()" name="test_multiarray::TestNeighborhoodIter.test_circular" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_5fc50244 [label="3632: test_circular_object()" name="test_multiarray::TestNeighborhoodIter.test_circular_object" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_b40d5827 [label="3615: test_mirror()" name="test_multiarray::TestNeighborhoodIter.test_mirror" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_59701ea5 [label="3578: test_mirror2d()" name="test_multiarray::TestNeighborhoodIter.test_mirror2d" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_bd313a9b [label="3581: test_mirror2d_object()" name="test_multiarray::TestNeighborhoodIter.test_mirror2d_object" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_e12ddcf6 [label="3618: test_mirror_object()" name="test_multiarray::TestNeighborhoodIter.test_mirror_object" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_5ac7b23a [label="3562: test_simple2d()" name="test_multiarray::TestNeighborhoodIter.test_simple2d" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_1e83909b [label="3565: test_simple2d_object()" name="test_multiarray::TestNeighborhoodIter.test_simple2d_object" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_a903f36f [label="3600: test_simple_float()" name="test_multiarray::TestNeighborhoodIter.test_simple_float" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_ae8ce9df [label="3603: test_simple_object()" name="test_multiarray::TestNeighborhoodIter.test_simple_object" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_570f08df [label="3911: _check_roundtrip()" name="test_multiarray::TestNewBufferProtocol._check_roundtrip" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_0aea8c6a [label="4157: test_padded_struct_array()" name="test_multiarray::TestNewBufferProtocol.test_padded_struct_array" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_0ecb325a [label="4144: test_padding()" name="test_multiarray::TestNewBufferProtocol.test_padding" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_6215b977 [label="3927: test_roundtrip()" name="test_multiarray::TestNewBufferProtocol.test_roundtrip" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_6acf03ee [label="3997: test_roundtrip_half()" name="test_multiarray::TestNewBufferProtocol.test_roundtrip_half" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_7b93b577 [label="4039: test_roundtrip_scalar()" name="test_multiarray::TestNewBufferProtocol.test_roundtrip_scalar" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_6217a8a2 [label="4016: test_roundtrip_single_types()" name="test_multiarray::TestNewBufferProtocol.test_roundtrip_single_types" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_d47a2cd2 [label="3831: _check()" name="test_multiarray::TestPEP3118Dtype._check" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_442aaaba [label="3896: test_byteorder_inside_struct()" name="test_multiarray::TestPEP3118Dtype.test_byteorder_inside_struct" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_70551049 [label="3902: test_intra_padding()" name="test_multiarray::TestPEP3118Dtype.test_intra_padding" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_3b331e7c [label="3841: test_native_padding()" name="test_multiarray::TestPEP3118Dtype.test_native_padding" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_26e764a5 [label="3853: test_native_padding_2()" name="test_multiarray::TestPEP3118Dtype.test_native_padding_2" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_23724407 [label="3877: test_native_padding_3()" name="test_multiarray::TestPEP3118Dtype.test_native_padding_3" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_96006a4b [label="3889: test_padding_with_array_inside_struct()" name="test_multiarray::TestPEP3118Dtype.test_padding_with_array_inside_struct" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_957db3fc [label="3858: test_trailing_padding()" name="test_multiarray::TestPEP3118Dtype.test_trailing_padding" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_4b63d8b7 [label="2118: _loads()" name="test_multiarray::TestPickling._loads" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_0469334e [label="2163: test_subarray_int_shape()" name="test_multiarray::TestPickling.test_subarray_int_shape" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_06116de0 [label="2132: test_version0_float32()" name="test_multiarray::TestPickling.test_version0_float32" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_366a1865 [label="2126: test_version0_int8()" name="test_multiarray::TestPickling.test_version0_int8" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_31f3fd09 [label="2138: test_version0_object()" name="test_multiarray::TestPickling.test_version0_object" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_38a3a008 [label="2151: test_version1_float32()" name="test_multiarray::TestPickling.test_version1_float32" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_957c778f [label="2145: test_version1_int8()" name="test_multiarray::TestPickling.test_version1_int8" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_44e8658f [label="2157: test_version1_object()" name="test_multiarray::TestPickling.test_version1_object" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_f757fb3d [label="3364: test_mean_values()" name="test_multiarray::TestStats.test_mean_values" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_625479c2 [label="3384: test_std_values()" name="test_multiarray::TestStats.test_std_values" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_a781101f [label="3375: test_var_values()" name="test_multiarray::TestStats.test_var_values" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_62458d6b [label="3204: _mean()" name="test_multiarray::_mean" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_4bd78b08 [label="3210: _std()" name="test_multiarray::_std" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_ecfac8bf [label="3207: _var()" name="test_multiarray::_var" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_a8065a13 -> node_b6d27c75 [color="#009E73" penwidth="2"];
node_f88d0d85 -> node_b6d27c75 [color="#0072B2" penwidth="2"];
node_29a6d267 -> node_b6d27c75 [color="#CC79A7" penwidth="2"];
node_7a5311e0 -> node_b6d27c75 [color="#000000" penwidth="2"];
node_d0ed4481 -> node_b6d27c75 [color="#E69F00" penwidth="2"];
node_b78ca35e -> node_b6d27c75 [color="#D55E00" penwidth="2"];
node_242ae502 -> node_b6d27c75 [color="#56B4E9" penwidth="2"];
node_242ae502 -> node_b6d27c75 [color="#56B4E9" penwidth="2"];
node_36402c2e -> node_b6d27c75 [color="#D55E00" penwidth="2"];
node_36402c2e -> node_b6d27c75 [color="#D55E00" penwidth="2"];
node_23ae11c4 -> node_b6d27c75 [color="#F0E442" penwidth="2"];
node_23ae11c4 -> node_b6d27c75 [color="#F0E442" penwidth="2"];
node_b2774ce8 -> node_b6d27c75 [color="#000000" penwidth="2"];
node_b2774ce8 -> node_b6d27c75 [color="#000000" penwidth="2"];
node_d11facf3 -> node_b6d27c75 [color="#009E73" penwidth="2"];
node_d11facf3 -> node_b6d27c75 [color="#009E73" penwidth="2"];
node_2952fdbd -> node_b6d27c75 [color="#0072B2" penwidth="2"];
node_2952fdbd -> node_b6d27c75 [color="#0072B2" penwidth="2"];
node_9039a793 -> node_91bf0c2a [color="#009E73" penwidth="2"];
node_b31e0ca2 -> node_91bf0c2a [color="#56B4E9" penwidth="2"];
node_23052cee -> node_72cd6ca0 [color="#D55E00" penwidth="2"];
node_58c31e2e -> node_23052cee [color="#D55E00" penwidth="2"];
node_58c31e2e -> node_23052cee [color="#D55E00" penwidth="2"];
node_58c31e2e -> node_23052cee [color="#D55E00" penwidth="2"];
node_58c31e2e -> node_23052cee [color="#D55E00" penwidth="2"];
node_58c31e2e -> node_23052cee [color="#D55E00" penwidth="2"];
node_58c31e2e -> node_23052cee [color="#D55E00" penwidth="2"];
node_f41ea1b5 -> node_72cd6ca0 [color="#0072B2" penwidth="2"];
node_a050bff6 -> node_b064baba [color="#D55E00" penwidth="2"];
node_a050bff6 -> node_b064baba [color="#D55E00" penwidth="2"];
node_2db625df -> node_b064baba [color="#CC79A7" penwidth="2"];
node_40ee9874 -> node_b064baba [color="#F0E442" penwidth="2"];
node_40ee9874 -> node_b064baba [color="#F0E442" penwidth="2"];
node_40ee9874 -> node_b064baba [color="#F0E442" penwidth="2"];
node_c4cb35f7 -> node_b064baba [color="#CC79A7" penwidth="2"];
node_dd69438d -> node_b064baba [color="#0072B2" penwidth="2"];
node_80a36e58 -> node_b064baba [color="#000000" penwidth="2"];
node_2fcde544 -> node_b064baba [color="#F0E442" penwidth="2"];
node_01245baf -> node_b064baba [color="#CC79A7" penwidth="2"];
node_6ddabfc1 -> node_b064baba [color="#E69F00" penwidth="2"];
node_097125be -> node_b064baba [color="#D55E00" penwidth="2"];
node_a160d1cf -> node_b064baba [color="#CC79A7" penwidth="2"];
node_56486ab6 -> node_b064baba [color="#D55E00" penwidth="2"];
node_aac2e39b -> node_040b0fa2 [color="#009E73" penwidth="2"];
node_763ea847 -> node_040b0fa2 [color="#CC79A7" penwidth="2"];
node_763ea847 -> node_040b0fa2 [color="#CC79A7" penwidth="2"];
node_763ea847 -> node_040b0fa2 [color="#CC79A7" penwidth="2"];
node_763ea847 -> node_040b0fa2 [color="#CC79A7" penwidth="2"];
node_763ea847 -> node_040b0fa2 [color="#CC79A7" penwidth="2"];
node_763ea847 -> node_040b0fa2 [color="#CC79A7" penwidth="2"];
node_763ea847 -> node_040b0fa2 [color="#CC79A7" penwidth="2"];
node_763ea847 -> node_040b0fa2 [color="#CC79A7" penwidth="2"];
node_763ea847 -> node_040b0fa2 [color="#CC79A7" penwidth="2"];
node_763ea847 -> node_040b0fa2 [color="#CC79A7" penwidth="2"];
node_74bef057 -> node_7ee1d003 [color="#CC79A7" penwidth="2"];
node_5fc50244 -> node_7ee1d003 [color="#F0E442" penwidth="2"];
node_b40d5827 -> node_b800c776 [color="#CC79A7" penwidth="2"];
node_59701ea5 -> node_dfc69f05 [color="#0072B2" penwidth="2"];
node_bd313a9b -> node_dfc69f05 [color="#009E73" penwidth="2"];
node_e12ddcf6 -> node_b800c776 [color="#D55E00" penwidth="2"];
node_5ac7b23a -> node_5b0ad0bc [color="#56B4E9" penwidth="2"];
node_1e83909b -> node_5b0ad0bc [color="#009E73" penwidth="2"];
node_a903f36f -> node_59d26324 [color="#CC79A7" penwidth="2"];
node_ae8ce9df -> node_59d26324 [color="#CC79A7" penwidth="2"];
node_0aea8c6a -> node_570f08df [color="#56B4E9" penwidth="2"];
node_0aea8c6a -> node_570f08df [color="#56B4E9" penwidth="2"];
node_0aea8c6a -> node_570f08df [color="#56B4E9" penwidth="2"];
node_0ecb325a -> node_570f08df [color="#56B4E9" penwidth="2"];
node_6215b977 -> node_570f08df [color="#CC79A7" penwidth="2"];
node_6215b977 -> node_570f08df [color="#CC79A7" penwidth="2"];
node_6215b977 -> node_570f08df [color="#CC79A7" penwidth="2"];
node_6215b977 -> node_570f08df [color="#CC79A7" penwidth="2"];
node_6215b977 -> node_570f08df [color="#CC79A7" penwidth="2"];
node_6215b977 -> node_570f08df [color="#CC79A7" penwidth="2"];
node_6215b977 -> node_570f08df [color="#CC79A7" penwidth="2"];
node_6215b977 -> node_570f08df [color="#CC79A7" penwidth="2"];
node_6215b977 -> node_570f08df [color="#CC79A7" penwidth="2"];
node_6215b977 -> node_570f08df [color="#CC79A7" penwidth="2"];
node_6215b977 -> node_570f08df [color="#CC79A7" penwidth="2"];
node_6215b977 -> node_570f08df [color="#CC79A7" penwidth="2"];
node_6acf03ee -> node_570f08df [color="#D55E00" penwidth="2"];
node_6acf03ee -> node_570f08df [color="#D55E00" penwidth="2"];
node_7b93b577 -> node_570f08df [color="#CC79A7" penwidth="2"];
node_6217a8a2 -> node_570f08df [color="#56B4E9" penwidth="2"];
node_6217a8a2 -> node_570f08df [color="#56B4E9" penwidth="2"];
node_6217a8a2 -> node_570f08df [color="#56B4E9" penwidth="2"];
node_442aaaba -> node_d47a2cd2 [color="#56B4E9" penwidth="2"];
node_70551049 -> node_d47a2cd2 [color="#E69F00" penwidth="2"];
node_3b331e7c -> node_d47a2cd2 [color="#F0E442" penwidth="2"];
node_3b331e7c -> node_d47a2cd2 [color="#F0E442" penwidth="2"];
node_26e764a5 -> node_d47a2cd2 [color="#0072B2" penwidth="2"];
node_26e764a5 -> node_d47a2cd2 [color="#0072B2" penwidth="2"];
node_23724407 -> node_d47a2cd2 [color="#CC79A7" penwidth="2"];
node_23724407 -> node_d47a2cd2 [color="#CC79A7" penwidth="2"];
node_96006a4b -> node_d47a2cd2 [color="#009E73" penwidth="2"];
node_957db3fc -> node_d47a2cd2 [color="#F0E442" penwidth="2"];
node_957db3fc -> node_d47a2cd2 [color="#F0E442" penwidth="2"];
node_957db3fc -> node_d47a2cd2 [color="#F0E442" penwidth="2"];
node_957db3fc -> node_d47a2cd2 [color="#F0E442" penwidth="2"];
node_957db3fc -> node_d47a2cd2 [color="#F0E442" penwidth="2"];
node_957db3fc -> node_d47a2cd2 [color="#F0E442" penwidth="2"];
node_957db3fc -> node_d47a2cd2 [color="#F0E442" penwidth="2"];
node_957db3fc -> node_d47a2cd2 [color="#F0E442" penwidth="2"];
node_957db3fc -> node_d47a2cd2 [color="#F0E442" penwidth="2"];
node_957db3fc -> node_d47a2cd2 [color="#F0E442" penwidth="2"];
node_0469334e -> node_4b63d8b7 [color="#D55E00" penwidth="2"];
node_06116de0 -> node_4b63d8b7 [color="#000000" penwidth="2"];
node_366a1865 -> node_4b63d8b7 [color="#0072B2" penwidth="2"];
node_31f3fd09 -> node_4b63d8b7 [color="#E69F00" penwidth="2"];
node_38a3a008 -> node_4b63d8b7 [color="#000000" penwidth="2"];
node_957c778f -> node_4b63d8b7 [color="#CC79A7" penwidth="2"];
node_44e8658f -> node_4b63d8b7 [color="#CC79A7" penwidth="2"];
node_f757fb3d -> node_62458d6b [color="#0072B2" penwidth="2"];
node_f757fb3d -> node_62458d6b [color="#0072B2" penwidth="2"];
node_625479c2 -> node_4bd78b08 [color="#56B4E9" penwidth="2"];
node_625479c2 -> node_ecfac8bf [color="#56B4E9" penwidth="2"];
node_a781101f -> node_62458d6b [color="#CC79A7" penwidth="2"];
node_a781101f -> node_62458d6b [color="#CC79A7" penwidth="2"];
node_a781101f -> node_ecfac8bf [color="#CC79A7" penwidth="2"];
subgraph cluster_1489ba30 {
    node_62458d6b node_ecfac8bf node_4bd78b08;
    label="File: test_multiarray";
    name="test_multiarray";
    style="filled";
    graph[style=dotted];
    subgraph cluster_6addf32d {
        node_91bf0c2a node_9039a793 node_b31e0ca2;
        label="Class: TestBool";
        name="TestBool";
        style="filled";
        graph[style=dotted];
    };
    subgraph cluster_9592ba51 {
        node_040b0fa2 node_763ea847 node_aac2e39b;
        label="Class: TestMethods";
        name="TestMethods";
        style="filled";
        graph[style=dotted];
    };
    subgraph cluster_e929e056 {
        node_4b63d8b7 node_366a1865 node_06116de0 node_31f3fd09 node_957c778f node_38a3a008 node_44e8658f node_0469334e;
        label="Class: TestPickling";
        name="TestPickling";
        style="filled";
        graph[style=dotted];
    };
    subgraph cluster_efa0be60 {
        node_72cd6ca0 node_23052cee node_58c31e2e node_f41ea1b5;
        label="Class: TestClip";
        name="TestClip";
        style="filled";
        graph[style=dotted];
    };
    subgraph cluster_b617ddd1 {
        node_b064baba node_6ddabfc1 node_80a36e58 node_097125be node_2db625df node_a160d1cf node_40ee9874 node_56486ab6 node_c4cb35f7 node_a050bff6 node_01245baf node_2fcde544 node_dd69438d;
        label="Class: TestIO";
        name="TestIO";
        style="filled";
        graph[style=dotted];
    };
    subgraph cluster_ba5c9b22 {
        node_f757fb3d node_a781101f node_625479c2;
        label="Class: TestStats";
        name="TestStats";
        style="filled";
        graph[style=dotted];
    };
    subgraph cluster_92cb0adf {
        node_5b0ad0bc node_5ac7b23a node_1e83909b node_dfc69f05 node_59701ea5 node_bd313a9b node_59d26324 node_a903f36f node_ae8ce9df node_b800c776 node_b40d5827 node_e12ddcf6 node_7ee1d003 node_74bef057 node_5fc50244;
        label="Class: TestNeighborhoodIter";
        name="TestNeighborhoodIter";
        style="filled";
        graph[style=dotted];
    };
    subgraph cluster_40527c32 {
        node_d47a2cd2 node_3b331e7c node_26e764a5 node_957db3fc node_23724407 node_96006a4b node_442aaaba node_70551049;
        label="Class: TestPEP3118Dtype";
        name="TestPEP3118Dtype";
        style="filled";
        graph[style=dotted];
    };
    subgraph cluster_c4fad325 {
        node_570f08df node_6215b977 node_6acf03ee node_6217a8a2 node_7b93b577 node_0ecb325a node_0aea8c6a;
        label="Class: TestNewBufferProtocol";
        name="TestNewBufferProtocol";
        style="filled";
        graph[style=dotted];
    };
    subgraph cluster_4acb657e {
        node_b6d27c75 node_d0ed4481 node_29a6d267 node_7a5311e0 node_f88d0d85 node_a8065a13 node_b78ca35e;
        label="Class: PriorityNdarray";
        name="PriorityNdarray";
        style="filled";
        graph[style=dotted];
    };
    subgraph cluster_8badc454 {
        node_d11facf3 node_23ae11c4 node_b2774ce8 node_36402c2e node_242ae502 node_2952fdbd;
        label="Class: TestArrayPriority";
        name="TestArrayPriority";
        style="filled";
        graph[style=dotted];
    };
};
}
