digraph G {
concentrate=true;
splines="ortho";
rankdir="LR";
subgraph legend{
    rank = min;
    label = "legend";
    Legend [shape=none, margin=0, label = <
        <table cellspacing="0" cellpadding="0" border="1"><tr><td>Code2flow Legend</td></tr><tr><td>
        <table cellspacing="0">
        <tr><td>Regular function</td><td width="50px" bgcolor='#cccccc'></td></tr>
        <tr><td>Trunk function (nothing calls this)</td><td bgcolor='#966F33'></td></tr>
        <tr><td>Leaf function (this calls nothing else)</td><td bgcolor='#6db33f'></td></tr>
        <tr><td>Function call</td><td><font color='black'>&#8594;</font></td></tr>
        </table></td></tr></table>
        >];
}node_58e8ec71 [label="55: __init__()" name="queries.models::Note.__init__" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_ffeb92b1 [label="40: assertValueQuerysetEqual()" name="queries.tests::BaseQuerysetTest.assertValueQuerysetEqual" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_1d57ebdc [label="2061: test_evaluated_queryset_as_argument()" name="queries.tests::CloneTests.test_evaluated_queryset_as_argument" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_d3af1e71 [label="521: test_ticket4358()" name="queries.tests::Queries1Tests.test_ticket4358" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_1f0b7595 [label="629: test_ticket7098()" name="queries.tests::Queries1Tests.test_ticket7098" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_09af0ebe [label="769: test_ticket9985()" name="queries.tests::Queries1Tests.test_ticket9985" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_f858b6d9 [label="510: test_tickets_5321_7070()" name="queries.tests::Queries1Tests.test_tickets_5321_7070" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_ce750644 [label="1382: test_ticket7095()" name="queries.tests::Queries4Tests.test_ticket7095" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_52bde0d2 [label="2232: get_ordered_articles()" name="queries.tests::QuerySetSupportsPythonIdioms.get_ordered_articles" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_49169e4e [label="2235: test_can_get_items_using_index_and_slice_notation()" name="queries.tests::QuerySetSupportsPythonIdioms.test_can_get_items_using_index_and_slice_notation" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_010dcc24 [label="2270: test_slicing_can_slice_again_after_slicing()" name="queries.tests::QuerySetSupportsPythonIdioms.test_slicing_can_slice_again_after_slicing" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_84a0c053 [label="2240: test_slicing_with_steps_can_be_used()" name="queries.tests::QuerySetSupportsPythonIdioms.test_slicing_with_steps_can_be_used" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_5147f3f8 [label="2266: test_slicing_with_tests_is_not_lazy()" name="queries.tests::QuerySetSupportsPythonIdioms.test_slicing_with_tests_is_not_lazy" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_12284b57 [label="2262: test_slicing_without_step_is_lazy()" name="queries.tests::QuerySetSupportsPythonIdioms.test_slicing_without_step_is_lazy" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_e9f34f01 [label="2248: test_slicing_works_with_longs()" name="queries.tests::QuerySetSupportsPythonIdioms.test_slicing_works_with_longs" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_ce077d5f [label="2555: check_union()" name="queries.tests::UnionTests.check_union" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_bd6d87c0 [label="2570: test_AB_ACB()" name="queries.tests::UnionTests.test_AB_ACB" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_aab38985 [label="2560: test_A_AB()" name="queries.tests::UnionTests.test_A_AB" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_1a6972c4 [label="2565: test_A_AB2()" name="queries.tests::UnionTests.test_A_AB2" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_22169eeb [label="2575: test_BAB_BAC()" name="queries.tests::UnionTests.test_BAB_BAC" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_428e3ae4 [label="2580: test_BAB_BACB()" name="queries.tests::UnionTests.test_BAB_BACB" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_5fca235b [label="2585: test_BA_BCA__BAB_BAC_BCA()" name="queries.tests::UnionTests.test_BA_BCA__BAB_BAC_BCA" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_1a5448aa [label="2142: test_flat_values_list()" name="queries.tests::ValuesQuerysetTests.test_flat_values_list" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_58e8ec71 -> node_58e8ec71 [color="#E69F00" penwidth="2"];
node_1d57ebdc -> node_58e8ec71 [color="#F0E442" penwidth="2"];
node_d3af1e71 -> node_ffeb92b1 [color="#E69F00" penwidth="2"];
node_d3af1e71 -> node_ffeb92b1 [color="#E69F00" penwidth="2"];
node_1f0b7595 -> node_ffeb92b1 [color="#0072B2" penwidth="2"];
node_09af0ebe -> node_ffeb92b1 [color="#D55E00" penwidth="2"];
node_f858b6d9 -> node_ffeb92b1 [color="#E69F00" penwidth="2"];
node_ce750644 -> node_ffeb92b1 [color="#F0E442" penwidth="2"];
node_49169e4e -> node_52bde0d2 [color="#D55E00" penwidth="2"];
node_49169e4e -> node_52bde0d2 [color="#D55E00" penwidth="2"];
node_010dcc24 -> node_52bde0d2 [color="#F0E442" penwidth="2"];
node_010dcc24 -> node_52bde0d2 [color="#F0E442" penwidth="2"];
node_010dcc24 -> node_52bde0d2 [color="#F0E442" penwidth="2"];
node_010dcc24 -> node_52bde0d2 [color="#F0E442" penwidth="2"];
node_010dcc24 -> node_52bde0d2 [color="#F0E442" penwidth="2"];
node_010dcc24 -> node_52bde0d2 [color="#F0E442" penwidth="2"];
node_010dcc24 -> node_52bde0d2 [color="#F0E442" penwidth="2"];
node_84a0c053 -> node_52bde0d2 [color="#009E73" penwidth="2"];
node_5147f3f8 -> node_52bde0d2 [color="#000000" penwidth="2"];
node_12284b57 -> node_52bde0d2 [color="#CC79A7" penwidth="2"];
node_e9f34f01 -> node_52bde0d2 [color="#E69F00" penwidth="2"];
node_e9f34f01 -> node_52bde0d2 [color="#E69F00" penwidth="2"];
node_e9f34f01 -> node_52bde0d2 [color="#E69F00" penwidth="2"];
node_e9f34f01 -> node_52bde0d2 [color="#E69F00" penwidth="2"];
node_bd6d87c0 -> node_ce077d5f [color="#000000" penwidth="2"];
node_aab38985 -> node_ce077d5f [color="#0072B2" penwidth="2"];
node_1a6972c4 -> node_ce077d5f [color="#F0E442" penwidth="2"];
node_22169eeb -> node_ce077d5f [color="#009E73" penwidth="2"];
node_428e3ae4 -> node_ce077d5f [color="#F0E442" penwidth="2"];
node_5fca235b -> node_ce077d5f [color="#009E73" penwidth="2"];
node_1a5448aa -> node_ffeb92b1 [color="#56B4E9" penwidth="2"];
subgraph cluster_67ba0d1e {
    label="File: queries.models";
    name="queries.models";
    style="filled";
    graph[style=dotted];
    subgraph cluster_d8c51a0c {
        node_58e8ec71;
        label="Class: Note";
        name="Note";
        style="filled";
        graph[style=dotted];
    };
};
subgraph cluster_68f6ab40 {
    label="File: queries.tests";
    name="queries.tests";
    style="filled";
    graph[style=dotted];
    subgraph cluster_b7927768 {
        node_ffeb92b1;
        label="Class: BaseQuerysetTest";
        name="BaseQuerysetTest";
        style="filled";
        graph[style=dotted];
    };
    subgraph cluster_ccd05087 {
        node_f858b6d9 node_d3af1e71 node_1f0b7595 node_09af0ebe;
        label="Class: Queries1Tests";
        name="Queries1Tests";
        style="filled";
        graph[style=dotted];
    };
    subgraph cluster_e5b12767 {
        node_ce750644;
        label="Class: Queries4Tests";
        name="Queries4Tests";
        style="filled";
        graph[style=dotted];
    };
    subgraph cluster_a031d630 {
        node_1d57ebdc;
        label="Class: CloneTests";
        name="CloneTests";
        style="filled";
        graph[style=dotted];
    };
    subgraph cluster_2adb146e {
        node_1a5448aa;
        label="Class: ValuesQuerysetTests";
        name="ValuesQuerysetTests";
        style="filled";
        graph[style=dotted];
    };
    subgraph cluster_c6b81c77 {
        node_52bde0d2 node_49169e4e node_84a0c053 node_e9f34f01 node_12284b57 node_5147f3f8 node_010dcc24;
        label="Class: QuerySetSupportsPythonIdioms";
        name="QuerySetSupportsPythonIdioms";
        style="filled";
        graph[style=dotted];
    };
    subgraph cluster_4ccfed5a {
        node_ce077d5f node_aab38985 node_1a6972c4 node_bd6d87c0 node_22169eeb node_428e3ae4 node_5fca235b;
        label="Class: UnionTests";
        name="UnionTests";
        style="filled";
        graph[style=dotted];
    };
};
}
