digraph "classes_20" {
rankdir=BT
charset="utf-8"
"test_c_spec.CallableConverter" [color="black", fontcolor="black", label=<{CallableConverter|compiler : str<br ALIGN="LEFT"/>|test_call_function()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"test_c_spec.ComplexConverter" [color="black", fontcolor="black", label=<{ComplexConverter|compiler : str<br ALIGN="LEFT"/>|test_complex_return()<br ALIGN="LEFT"/>test_complex_var_in()<br ALIGN="LEFT"/>test_type_match_complex()<br ALIGN="LEFT"/>test_type_match_float()<br ALIGN="LEFT"/>test_type_match_int()<br ALIGN="LEFT"/>test_type_match_string()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"test_c_spec.DictConverter" [color="black", fontcolor="black", label=<{DictConverter|compiler : str<br ALIGN="LEFT"/>|test_return()<br ALIGN="LEFT"/>test_type_match_bad()<br ALIGN="LEFT"/>test_type_match_good()<br ALIGN="LEFT"/>test_var_in()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"test_c_spec.FileConverter" [color="black", fontcolor="black", label=<{FileConverter|compiler : str<br ALIGN="LEFT"/>|test_file_to_py()<br ALIGN="LEFT"/>test_py_to_file()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"test_c_spec.FloatConverter" [color="black", fontcolor="black", label=<{FloatConverter|compiler : str<br ALIGN="LEFT"/>|test_float_return()<br ALIGN="LEFT"/>test_float_var_in()<br ALIGN="LEFT"/>test_type_match_complex()<br ALIGN="LEFT"/>test_type_match_float()<br ALIGN="LEFT"/>test_type_match_int()<br ALIGN="LEFT"/>test_type_match_string()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"test_c_spec.InstanceConverter" [color="black", fontcolor="black", label=<{InstanceConverter|<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"test_c_spec.IntConverter" [color="black", fontcolor="black", label=<{IntConverter|compiler : str<br ALIGN="LEFT"/>|test_int_return()<br ALIGN="LEFT"/>test_type_match_complex()<br ALIGN="LEFT"/>test_type_match_float()<br ALIGN="LEFT"/>test_type_match_int()<br ALIGN="LEFT"/>test_type_match_string()<br ALIGN="LEFT"/>test_var_in()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"test_c_spec.ListConverter" [color="black", fontcolor="black", label=<{ListConverter|compiler : str<br ALIGN="LEFT"/>|test_return()<br ALIGN="LEFT"/>test_speed()<br ALIGN="LEFT"/>test_type_match_bad()<br ALIGN="LEFT"/>test_type_match_good()<br ALIGN="LEFT"/>test_var_in()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"test_c_spec.SequenceConverter" [color="black", fontcolor="black", label=<{SequenceConverter|compiler : str<br ALIGN="LEFT"/>|test_convert_to_dict()<br ALIGN="LEFT"/>test_convert_to_list()<br ALIGN="LEFT"/>test_convert_to_string()<br ALIGN="LEFT"/>test_convert_to_tuple()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"test_c_spec.StringConverter" [color="black", fontcolor="black", label=<{StringConverter|compiler : str<br ALIGN="LEFT"/>|test_return()<br ALIGN="LEFT"/>test_type_match_complex()<br ALIGN="LEFT"/>test_type_match_float()<br ALIGN="LEFT"/>test_type_match_int()<br ALIGN="LEFT"/>test_type_match_string()<br ALIGN="LEFT"/>test_var_in()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"test_c_spec.TupleConverter" [color="black", fontcolor="black", label=<{TupleConverter|compiler : str<br ALIGN="LEFT"/>|test_return()<br ALIGN="LEFT"/>test_type_match_bad()<br ALIGN="LEFT"/>test_type_match_good()<br ALIGN="LEFT"/>test_var_in()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
}
