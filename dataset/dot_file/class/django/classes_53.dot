digraph "classes_53" {
rankdir=BT
charset="utf-8"
"transactions.tests.AtomicErrorsTests" [color="black", fontcolor="black", label=<{AtomicErrorsTests|available_apps : list<br ALIGN="LEFT"/>|test_atomic_allows_queries_after_fixing_transaction()<br ALIGN="LEFT"/>test_atomic_prevents_calling_transaction_methods()<br ALIGN="LEFT"/>test_atomic_prevents_queries_in_broken_transaction()<br ALIGN="LEFT"/>test_atomic_prevents_queries_in_broken_transaction_after_client_close()<br ALIGN="LEFT"/>test_atomic_prevents_setting_autocommit()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"transactions.tests.AtomicInsideTransactionTests" [color="black", fontcolor="black", label=<{AtomicInsideTransactionTests|atomic<br ALIGN="LEFT"/>|setUp()<br ALIGN="LEFT"/>tearDown()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"transactions.tests.AtomicMergeTests" [color="black", fontcolor="black", label=<{AtomicMergeTests|available_apps : list<br ALIGN="LEFT"/>|test_merged_inner_savepoint_rollback()<br ALIGN="LEFT"/>test_merged_outer_rollback()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"transactions.tests.AtomicMiscTests" [color="black", fontcolor="black", label=<{AtomicMiscTests|available_apps : list<br ALIGN="LEFT"/>|test_atomic_does_not_leak_savepoints_on_failure()<br ALIGN="LEFT"/>test_wrap_callable_instance()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"transactions.tests.AtomicMySQLTests" [color="black", fontcolor="black", label=<{AtomicMySQLTests|available_apps : list<br ALIGN="LEFT"/>|test_implicit_savepoint_rollback()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"transactions.tests.AtomicTests" [color="black", fontcolor="black", label=<{AtomicTests|available_apps : list<br ALIGN="LEFT"/>|test_alternate_decorator_syntax_commit()<br ALIGN="LEFT"/>test_alternate_decorator_syntax_rollback()<br ALIGN="LEFT"/>test_commit()<br ALIGN="LEFT"/>test_decorator_syntax_commit()<br ALIGN="LEFT"/>test_decorator_syntax_rollback()<br ALIGN="LEFT"/>test_force_rollback()<br ALIGN="LEFT"/>test_merged_commit_commit()<br ALIGN="LEFT"/>test_merged_commit_rollback()<br ALIGN="LEFT"/>test_merged_rollback_commit()<br ALIGN="LEFT"/>test_merged_rollback_rollback()<br ALIGN="LEFT"/>test_nested_commit_commit()<br ALIGN="LEFT"/>test_nested_commit_rollback()<br ALIGN="LEFT"/>test_nested_rollback_commit()<br ALIGN="LEFT"/>test_nested_rollback_rollback()<br ALIGN="LEFT"/>test_prevent_rollback()<br ALIGN="LEFT"/>test_reuse_commit_commit()<br ALIGN="LEFT"/>test_reuse_commit_rollback()<br ALIGN="LEFT"/>test_reuse_rollback_commit()<br ALIGN="LEFT"/>test_reuse_rollback_rollback()<br ALIGN="LEFT"/>test_rollback()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"transactions.tests.AtomicWithoutAutocommitTests" [color="black", fontcolor="black", label=<{AtomicWithoutAutocommitTests|<br ALIGN="LEFT"/>|setUp()<br ALIGN="LEFT"/>tearDown()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"transactions.tests.AtomicMiscTests.test_wrap_callable_instance.Callable" [color="black", fontcolor="black", label=<{Callable|<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"transactions.models.Reporter.Meta" [color="black", fontcolor="black", label=<{Meta|ordering : tuple<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"transactions.models.Reporter" [color="black", fontcolor="black", label=<{Reporter|email<br ALIGN="LEFT"/>first_name<br ALIGN="LEFT"/>last_name<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"transactions.tests.AtomicInsideTransactionTests" -> "transactions.tests.AtomicTests" [arrowhead="empty", arrowtail="none"];
"transactions.tests.AtomicWithoutAutocommitTests" -> "transactions.tests.AtomicTests" [arrowhead="empty", arrowtail="none"];
}
