digraph "classes_43" {
rankdir=BT
charset="utf-8"
"queries.models.Annotation" [color="black", fontcolor="black", label=<{Annotation|name<br ALIGN="LEFT"/>notes<br ALIGN="LEFT"/>tag<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.Article" [color="black", fontcolor="black", label=<{Article|created<br ALIGN="LEFT"/>name<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.Author" [color="black", fontcolor="black", label=<{Author|extra<br ALIGN="LEFT"/>name<br ALIGN="LEFT"/>num<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.BaseA" [color="black", fontcolor="black", label=<{BaseA|a<br ALIGN="LEFT"/>b<br ALIGN="LEFT"/>c<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.tests.BaseQuerysetTest" [color="black", fontcolor="black", label=<{BaseQuerysetTest|<br ALIGN="LEFT"/>|assertValueQuerysetEqual(qs, values)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"queries.models.BaseUser" [color="black", fontcolor="black", label=<{BaseUser|<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.Book" [color="black", fontcolor="black", label=<{Book|chapter<br ALIGN="LEFT"/>title<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.CategoryItem" [color="black", fontcolor="black", label=<{CategoryItem|category<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.CategoryRelationship" [color="black", fontcolor="black", label=<{CategoryRelationship|first<br ALIGN="LEFT"/>second<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.Celebrity" [color="black", fontcolor="black", label=<{Celebrity|greatest_fan<br ALIGN="LEFT"/>name<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.Channel" [color="black", fontcolor="black", label=<{Channel|identifier<br ALIGN="LEFT"/>programs<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.Chapter" [color="black", fontcolor="black", label=<{Chapter|paragraph<br ALIGN="LEFT"/>title<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.Child" [color="black", fontcolor="black", label=<{Child|parent<br ALIGN="LEFT"/>person<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.ChildObjectA" [color="black", fontcolor="black", label=<{ChildObjectA|<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.Classroom" [color="black", fontcolor="black", label=<{Classroom|school<br ALIGN="LEFT"/>students<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.tests.CloneTests" [color="black", fontcolor="black", label=<{CloneTests|<br ALIGN="LEFT"/>|test_evaluated_queryset_as_argument()<br ALIGN="LEFT"/>test_no_fields_cloning()<br ALIGN="LEFT"/>test_no_model_options_cloning()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"queries.models.Company" [color="black", fontcolor="black", label=<{Company|employees<br ALIGN="LEFT"/>name<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.tests.ComparisonTests" [color="black", fontcolor="black", label=<{ComparisonTests|a2<br ALIGN="LEFT"/>n1<br ALIGN="LEFT"/>|setUp()<br ALIGN="LEFT"/>test_ticket8597()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"queries.tests.ConditionalTests" [color="black", fontcolor="black", label=<{ConditionalTests|<br ALIGN="LEFT"/>|setUpTestData()<br ALIGN="LEFT"/>test_infinite_loop()<br ALIGN="LEFT"/>test_null_ordering_added()<br ALIGN="LEFT"/>test_ticket14244()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"queries.models.Cover" [color="black", fontcolor="black", label=<{Cover|item<br ALIGN="LEFT"/>title<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.CustomManager" [color="black", fontcolor="black", label=<{CustomManager|<br ALIGN="LEFT"/>|get_queryset()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"queries.models.CustomPk" [color="black", fontcolor="black", label=<{CustomPk|extra<br ALIGN="LEFT"/>name<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.CustomPkTag" [color="black", fontcolor="black", label=<{CustomPkTag|custom_pk<br ALIGN="LEFT"/>id<br ALIGN="LEFT"/>tag<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.tests.CustomPkTests" [color="black", fontcolor="black", label=<{CustomPkTests|<br ALIGN="LEFT"/>|test_ticket7371()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"queries.tests.DefaultValuesInsertTest" [color="black", fontcolor="black", label=<{DefaultValuesInsertTest|<br ALIGN="LEFT"/>|test_no_extra_params()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"queries.models.Detail" [color="black", fontcolor="black", label=<{Detail|data<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.tests.DisjunctionPromotionTests" [color="black", fontcolor="black", label=<{DisjunctionPromotionTests|<br ALIGN="LEFT"/>|test_disjuction_promotion_select_related()<br ALIGN="LEFT"/>test_disjunction_promotion1()<br ALIGN="LEFT"/>test_disjunction_promotion2()<br ALIGN="LEFT"/>test_disjunction_promotion3()<br ALIGN="LEFT"/>test_disjunction_promotion3_demote()<br ALIGN="LEFT"/>test_disjunction_promotion4()<br ALIGN="LEFT"/>test_disjunction_promotion4_demote()<br ALIGN="LEFT"/>test_disjunction_promotion5_demote()<br ALIGN="LEFT"/>test_disjunction_promotion6()<br ALIGN="LEFT"/>test_disjunction_promotion7()<br ALIGN="LEFT"/>test_disjunction_promotion_fexpression()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"queries.tests.DisjunctiveFilterTests" [color="black", fontcolor="black", label=<{DisjunctiveFilterTests|<br ALIGN="LEFT"/>|setUpTestData()<br ALIGN="LEFT"/>test_ticket7872()<br ALIGN="LEFT"/>test_ticket8283()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"queries.tests.DoubleInSubqueryTests" [color="black", fontcolor="black", label=<{DoubleInSubqueryTests|<br ALIGN="LEFT"/>|test_double_subquery_in()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"queries.models.DumbCategory" [color="black", fontcolor="black", label=<{DumbCategory|<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.tests.WhereNodeTest.DummyNode" [color="black", fontcolor="black", label=<{DummyNode|<br ALIGN="LEFT"/>|as_sql(compiler, connection)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"queries.models.Eaten" [color="black", fontcolor="black", label=<{Eaten|food<br ALIGN="LEFT"/>meal<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.Employment" [color="black", fontcolor="black", label=<{Employment|employee<br ALIGN="LEFT"/>employer<br ALIGN="LEFT"/>title<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.tests.EmptyQuerySetTests" [color="black", fontcolor="black", label=<{EmptyQuerySetTests|<br ALIGN="LEFT"/>|test_emptyqueryset_values()<br ALIGN="LEFT"/>test_ticket_19151()<br ALIGN="LEFT"/>test_values_subquery()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"queries.tests.EmptyStringPromotionTests" [color="black", fontcolor="black", label=<{EmptyStringPromotionTests|<br ALIGN="LEFT"/>|test_empty_string_promotion()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"queries.tests.EmptyStringsAsNullTest" [color="black", fontcolor="black", label=<{EmptyStringsAsNullTest|<br ALIGN="LEFT"/>|setUpTestData()<br ALIGN="LEFT"/>test_21001()<br ALIGN="LEFT"/>test_direct_exclude()<br ALIGN="LEFT"/>test_joined_exclude()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"queries.tests.EscapingTests" [color="black", fontcolor="black", label=<{EscapingTests|<br ALIGN="LEFT"/>|test_ticket_7302()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"queries.tests.Exclude15786" [color="black", fontcolor="black", label=<{Exclude15786|<br ALIGN="LEFT"/>|test_ticket15786()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"queries.tests.ExcludeTest17600" [color="black", fontcolor="black", label=<{ExcludeTest17600|<br ALIGN="LEFT"/>|setUpTestData()<br ALIGN="LEFT"/>test_exclude_plain()<br ALIGN="LEFT"/>test_exclude_plain_distinct()<br ALIGN="LEFT"/>test_exclude_with_q_is_equal_to_plain_exclude()<br ALIGN="LEFT"/>test_exclude_with_q_is_equal_to_plain_exclude_variation()<br ALIGN="LEFT"/>test_exclude_with_q_object_distinct()<br ALIGN="LEFT"/>test_exclude_with_q_object_no_distinct()<br ALIGN="LEFT"/>test_only_orders_with_all_items_having_status_1()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"queries.tests.ExcludeTests" [color="black", fontcolor="black", label=<{ExcludeTests|<br ALIGN="LEFT"/>|setUpTestData()<br ALIGN="LEFT"/>test_ticket14511()<br ALIGN="LEFT"/>test_to_field()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"queries.tests.ExistsSql" [color="black", fontcolor="black", label=<{ExistsSql|<br ALIGN="LEFT"/>|test_exists()<br ALIGN="LEFT"/>test_ticket_18414()<br ALIGN="LEFT"/>test_ticket_18414_distinct_on()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"queries.models.ExtraInfo" [color="black", fontcolor="black", label=<{ExtraInfo|info<br ALIGN="LEFT"/>note<br ALIGN="LEFT"/>value<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.FK1" [color="black", fontcolor="black", label=<{FK1|f1<br ALIGN="LEFT"/>f2<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.FK2" [color="black", fontcolor="black", label=<{FK2|f1<br ALIGN="LEFT"/>f2<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.FK3" [color="black", fontcolor="black", label=<{FK3|f1<br ALIGN="LEFT"/>f2<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.Fan" [color="black", fontcolor="black", label=<{Fan|fan_of<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.Food" [color="black", fontcolor="black", label=<{Food|name<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.tests.ForeignKeyToBaseExcludeTests" [color="black", fontcolor="black", label=<{ForeignKeyToBaseExcludeTests|<br ALIGN="LEFT"/>|test_ticket_21787()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"queries.tests.GeneratorExpressionTests" [color="black", fontcolor="black", label=<{GeneratorExpressionTests|<br ALIGN="LEFT"/>|test_ticket10432()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"queries.models.Identifier" [color="black", fontcolor="black", label=<{Identifier|name<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.Individual" [color="black", fontcolor="black", label=<{Individual|alive<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.Item" [color="black", fontcolor="black", label=<{Item|created<br ALIGN="LEFT"/>creator<br ALIGN="LEFT"/>modified<br ALIGN="LEFT"/>name<br ALIGN="LEFT"/>note<br ALIGN="LEFT"/>tags<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.tests.IteratorExceptionsTest" [color="black", fontcolor="black", label=<{IteratorExceptionsTest|<br ALIGN="LEFT"/>|test_invalid_qs_list()<br ALIGN="LEFT"/>test_iter_exceptions()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"queries.models.Job" [color="black", fontcolor="black", label=<{Job|name<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.JobResponsibilities" [color="black", fontcolor="black", label=<{JobResponsibilities|job<br ALIGN="LEFT"/>responsibility<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.Join" [color="black", fontcolor="black", label=<{Join|a<br ALIGN="LEFT"/>b<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.tests.JoinReuseTest" [color="black", fontcolor="black", label=<{JoinReuseTest|<br ALIGN="LEFT"/>|test_fk_reuse()<br ALIGN="LEFT"/>test_fk_reuse_annotation()<br ALIGN="LEFT"/>test_fk_reuse_disjunction()<br ALIGN="LEFT"/>test_fk_reuse_order_by()<br ALIGN="LEFT"/>test_fk_reuse_select_related()<br ALIGN="LEFT"/>test_revfk_noreuse()<br ALIGN="LEFT"/>test_revo2o_reuse()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"queries.models.LeafA" [color="black", fontcolor="black", label=<{LeafA|data<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.LeafB" [color="black", fontcolor="black", label=<{LeafB|data<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.LoopX" [color="black", fontcolor="black", label=<{LoopX|y<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.LoopY" [color="black", fontcolor="black", label=<{LoopY|x<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.LoopZ" [color="black", fontcolor="black", label=<{LoopZ|z<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.ManagedModel" [color="black", fontcolor="black", label=<{ManagedModel|data<br ALIGN="LEFT"/>normal_manager<br ALIGN="LEFT"/>objects<br ALIGN="LEFT"/>public<br ALIGN="LEFT"/>tag<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.tests.ManyToManyExcludeTest" [color="black", fontcolor="black", label=<{ManyToManyExcludeTest|<br ALIGN="LEFT"/>|test_exclude_many_to_many()<br ALIGN="LEFT"/>test_ticket_12823()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"queries.models.Member" [color="black", fontcolor="black", label=<{Member|details<br ALIGN="LEFT"/>name<br ALIGN="LEFT"/>objects<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.MemberManager" [color="black", fontcolor="black", label=<{MemberManager|<br ALIGN="LEFT"/>|get_queryset()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"queries.models.ProxyCategory.Meta" [color="black", fontcolor="black", label=<{Meta|proxy : bool<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.Tag.Meta" [color="black", fontcolor="black", label=<{Meta|ordering : list<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.Note.Meta" [color="black", fontcolor="black", label=<{Meta|ordering : list<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.ExtraInfo.Meta" [color="black", fontcolor="black", label=<{Meta|ordering : list<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.Author.Meta" [color="black", fontcolor="black", label=<{Meta|ordering : list<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.Item.Meta" [color="black", fontcolor="black", label=<{Meta|ordering : list<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.Ranking.Meta" [color="black", fontcolor="black", label=<{Meta|ordering : tuple<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.Cover.Meta" [color="black", fontcolor="black", label=<{Meta|ordering : list<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.Valid.Meta" [color="black", fontcolor="black", label=<{Meta|ordering : list<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.LoopX.Meta" [color="black", fontcolor="black", label=<{Meta|ordering : list<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.LoopY.Meta" [color="black", fontcolor="black", label=<{Meta|ordering : list<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.LoopZ.Meta" [color="black", fontcolor="black", label=<{Meta|ordering : list<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.CustomPk.Meta" [color="black", fontcolor="black", label=<{Meta|ordering : list<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.SingleObject.Meta" [color="black", fontcolor="black", label=<{Meta|ordering : list<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.RelatedObject.Meta" [color="black", fontcolor="black", label=<{Meta|ordering : list<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.Plaything.Meta" [color="black", fontcolor="black", label=<{Meta|ordering : list<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.ProxyObjectA.Meta" [color="black", fontcolor="black", label=<{Meta|proxy : bool<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.ProxyObjectB.Meta" [color="black", fontcolor="black", label=<{Meta|proxy : bool<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.NullableName.Meta" [color="black", fontcolor="black", label=<{Meta|ordering : list<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.Order.Meta" [color="black", fontcolor="black", label=<{Meta|ordering : tuple<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.OrderItem.Meta" [color="black", fontcolor="black", label=<{Meta|ordering : tuple<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.Individual.Meta" [color="black", fontcolor="black", label=<{Meta|db_table : str<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.RelatedIndividual.Meta" [color="black", fontcolor="black", label=<{Meta|db_table : str<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.tests.WhereNodeTest.MockCompiler" [color="black", fontcolor="black", label=<{MockCompiler|<br ALIGN="LEFT"/>|compile(node)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"queries.models.ModelA" [color="black", fontcolor="black", label=<{ModelA|b<br ALIGN="LEFT"/>d<br ALIGN="LEFT"/>name<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.ModelB" [color="black", fontcolor="black", label=<{ModelB|c<br ALIGN="LEFT"/>name<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.ModelC" [color="black", fontcolor="black", label=<{ModelC|name<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.ModelD" [color="black", fontcolor="black", label=<{ModelD|name<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.MyObject" [color="black", fontcolor="black", label=<{MyObject|created_at<br ALIGN="LEFT"/>data<br ALIGN="LEFT"/>parent<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.NamedCategory" [color="black", fontcolor="black", label=<{NamedCategory|name<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.Node" [color="black", fontcolor="black", label=<{Node|num<br ALIGN="LEFT"/>parent<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.Note" [color="black", fontcolor="black", label=<{Note|lock : lock<br ALIGN="LEFT"/>misc<br ALIGN="LEFT"/>note<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.tests.NullInExcludeTest" [color="black", fontcolor="black", label=<{NullInExcludeTest|<br ALIGN="LEFT"/>|setUpTestData()<br ALIGN="LEFT"/>test_col_not_in_list_containing_null()<br ALIGN="LEFT"/>test_double_exclude()<br ALIGN="LEFT"/>test_null_in_exclude_qs()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"queries.tests.NullJoinPromotionOrTest" [color="black", fontcolor="black", label=<{NullJoinPromotionOrTest|<br ALIGN="LEFT"/>|setUpTestData()<br ALIGN="LEFT"/>test_isnull_filter_promotion()<br ALIGN="LEFT"/>test_null_join_demotion()<br ALIGN="LEFT"/>test_ticket_17886()<br ALIGN="LEFT"/>test_ticket_21366()<br ALIGN="LEFT"/>test_ticket_21748()<br ALIGN="LEFT"/>test_ticket_21748_complex_filter()<br ALIGN="LEFT"/>test_ticket_21748_double_negated_and()<br ALIGN="LEFT"/>test_ticket_21748_double_negated_or()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"queries.models.NullableName" [color="black", fontcolor="black", label=<{NullableName|name<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.tests.NullableRelOrderingTests" [color="black", fontcolor="black", label=<{NullableRelOrderingTests|<br ALIGN="LEFT"/>|test_join_already_in_query()<br ALIGN="LEFT"/>test_ticket10028()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"queries.models.Number" [color="black", fontcolor="black", label=<{Number|num<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.ObjectA" [color="black", fontcolor="black", label=<{ObjectA|name<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.ObjectB" [color="black", fontcolor="black", label=<{ObjectB|name<br ALIGN="LEFT"/>num<br ALIGN="LEFT"/>objecta<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.ObjectC" [color="black", fontcolor="black", label=<{ObjectC|childobjecta<br ALIGN="LEFT"/>name<br ALIGN="LEFT"/>objecta<br ALIGN="LEFT"/>objectb<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.OneToOneCategory" [color="black", fontcolor="black", label=<{OneToOneCategory|category<br ALIGN="LEFT"/>new_name<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.Order" [color="black", fontcolor="black", label=<{Order|id<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.OrderItem" [color="black", fontcolor="black", label=<{OrderItem|order<br ALIGN="LEFT"/>status<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.Page" [color="black", fontcolor="black", label=<{Page|text<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.Paragraph" [color="black", fontcolor="black", label=<{Paragraph|page<br ALIGN="LEFT"/>text<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.Person" [color="black", fontcolor="black", label=<{Person|name<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.Plaything" [color="black", fontcolor="black", label=<{Plaything|name<br ALIGN="LEFT"/>others<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.PointerA" [color="black", fontcolor="black", label=<{PointerA|connection<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.PointerB" [color="black", fontcolor="black", label=<{PointerB|connection<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.Program" [color="black", fontcolor="black", label=<{Program|identifier<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.ProxyCategory" [color="black", fontcolor="black", label=<{ProxyCategory|<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.ProxyObjectA" [color="black", fontcolor="black", label=<{ProxyObjectA|<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.ProxyObjectB" [color="black", fontcolor="black", label=<{ProxyObjectB|<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.tests.ProxyQueryCleanupTest" [color="black", fontcolor="black", label=<{ProxyQueryCleanupTest|<br ALIGN="LEFT"/>|test_evaluated_proxy_count()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"queries.tests.Queries1Tests" [color="black", fontcolor="black", label=<{Queries1Tests|<br ALIGN="LEFT"/>|setUpTestData()<br ALIGN="LEFT"/>test_avoid_infinite_loop_on_too_many_subqueries()<br ALIGN="LEFT"/>test_callable_args()<br ALIGN="LEFT"/>test_deferred_load_qs_pickling()<br ALIGN="LEFT"/>test_double_exclude()<br ALIGN="LEFT"/>test_exclude()<br ALIGN="LEFT"/>test_exclude_in()<br ALIGN="LEFT"/>test_heterogeneous_qs_combination()<br ALIGN="LEFT"/>test_nested_exclude()<br ALIGN="LEFT"/>test_order_by_join_unref()<br ALIGN="LEFT"/>test_order_by_tables()<br ALIGN="LEFT"/>test_reasonable_number_of_subq_aliases()<br ALIGN="LEFT"/>test_subquery_condition()<br ALIGN="LEFT"/>test_ticket10205()<br ALIGN="LEFT"/>test_ticket10432()<br ALIGN="LEFT"/>test_ticket1050()<br ALIGN="LEFT"/>test_ticket10742()<br ALIGN="LEFT"/>test_ticket17429()<br ALIGN="LEFT"/>test_ticket1801()<br ALIGN="LEFT"/>test_ticket19672()<br ALIGN="LEFT"/>test_ticket2091()<br ALIGN="LEFT"/>test_ticket2253()<br ALIGN="LEFT"/>test_ticket2306()<br ALIGN="LEFT"/>test_ticket2400()<br ALIGN="LEFT"/>test_ticket2496()<br ALIGN="LEFT"/>test_ticket2902()<br ALIGN="LEFT"/>test_ticket3037()<br ALIGN="LEFT"/>test_ticket3141()<br ALIGN="LEFT"/>test_ticket4358()<br ALIGN="LEFT"/>test_ticket4464()<br ALIGN="LEFT"/>test_ticket4510()<br ALIGN="LEFT"/>test_ticket6074()<br ALIGN="LEFT"/>test_ticket6154()<br ALIGN="LEFT"/>test_ticket6981()<br ALIGN="LEFT"/>test_ticket7076()<br ALIGN="LEFT"/>test_ticket7096()<br ALIGN="LEFT"/>test_ticket7098()<br ALIGN="LEFT"/>test_ticket7155()<br ALIGN="LEFT"/>test_ticket7181()<br ALIGN="LEFT"/>test_ticket7235()<br ALIGN="LEFT"/>test_ticket7277()<br ALIGN="LEFT"/>test_ticket7323()<br ALIGN="LEFT"/>test_ticket7378()<br ALIGN="LEFT"/>test_ticket7791()<br ALIGN="LEFT"/>test_ticket7813()<br ALIGN="LEFT"/>test_ticket8439()<br ALIGN="LEFT"/>test_ticket9411()<br ALIGN="LEFT"/>test_ticket9926()<br ALIGN="LEFT"/>test_ticket9985()<br ALIGN="LEFT"/>test_ticket9997()<br ALIGN="LEFT"/>test_ticket_10790_1()<br ALIGN="LEFT"/>test_ticket_10790_2()<br ALIGN="LEFT"/>test_ticket_10790_3()<br ALIGN="LEFT"/>test_ticket_10790_4()<br ALIGN="LEFT"/>test_ticket_10790_5()<br ALIGN="LEFT"/>test_ticket_10790_6()<br ALIGN="LEFT"/>test_ticket_10790_7()<br ALIGN="LEFT"/>test_ticket_10790_8()<br ALIGN="LEFT"/>test_ticket_10790_combine()<br ALIGN="LEFT"/>test_ticket_20250()<br ALIGN="LEFT"/>test_tickets_1878_2939()<br ALIGN="LEFT"/>test_tickets_2076_7256()<br ALIGN="LEFT"/>test_tickets_2080_3592()<br ALIGN="LEFT"/>test_tickets_2874_3002()<br ALIGN="LEFT"/>test_tickets_4088_4306()<br ALIGN="LEFT"/>test_tickets_5321_7070()<br ALIGN="LEFT"/>test_tickets_5324_6704()<br ALIGN="LEFT"/>test_tickets_6180_6203()<br ALIGN="LEFT"/>test_tickets_7087_12242()<br ALIGN="LEFT"/>test_tickets_7204_7506()<br ALIGN="LEFT"/>test_tickets_7448_7707()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"queries.tests.Queries2Tests" [color="black", fontcolor="black", label=<{Queries2Tests|<br ALIGN="LEFT"/>|setUpTestData()<br ALIGN="LEFT"/>test_ticket12239()<br ALIGN="LEFT"/>test_ticket4289()<br ALIGN="LEFT"/>test_ticket7759()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"queries.tests.Queries3Tests" [color="black", fontcolor="black", label=<{Queries3Tests|<br ALIGN="LEFT"/>|test_ticket22023()<br ALIGN="LEFT"/>test_ticket7107()<br ALIGN="LEFT"/>test_ticket8683()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"queries.tests.Queries4Tests" [color="black", fontcolor="black", label=<{Queries4Tests|<br ALIGN="LEFT"/>|setUpTestData()<br ALIGN="LEFT"/>test_combine_join_reuse()<br ALIGN="LEFT"/>test_order_by_resetting()<br ALIGN="LEFT"/>test_order_by_reverse_fk()<br ALIGN="LEFT"/>test_ticket10181()<br ALIGN="LEFT"/>test_ticket11811()<br ALIGN="LEFT"/>test_ticket14876()<br ALIGN="LEFT"/>test_ticket15316_exclude_false()<br ALIGN="LEFT"/>test_ticket15316_exclude_true()<br ALIGN="LEFT"/>test_ticket15316_filter_false()<br ALIGN="LEFT"/>test_ticket15316_filter_true()<br ALIGN="LEFT"/>test_ticket15316_one2one_exclude_false()<br ALIGN="LEFT"/>test_ticket15316_one2one_exclude_true()<br ALIGN="LEFT"/>test_ticket15316_one2one_filter_false()<br ALIGN="LEFT"/>test_ticket15316_one2one_filter_true()<br ALIGN="LEFT"/>test_ticket7095()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"queries.tests.Queries5Tests" [color="black", fontcolor="black", label=<{Queries5Tests|<br ALIGN="LEFT"/>|setUpTestData()<br ALIGN="LEFT"/>test_extra_select_literal_percent_s()<br ALIGN="LEFT"/>test_ordering()<br ALIGN="LEFT"/>test_ticket5261()<br ALIGN="LEFT"/>test_ticket7045()<br ALIGN="LEFT"/>test_ticket7256()<br ALIGN="LEFT"/>test_ticket9848()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"queries.tests.Queries6Tests" [color="black", fontcolor="black", label=<{Queries6Tests|<br ALIGN="LEFT"/>|setUpTestData()<br ALIGN="LEFT"/>test_nested_queries_sql()<br ALIGN="LEFT"/>test_parallel_iterators()<br ALIGN="LEFT"/>test_ticket3739()<br ALIGN="LEFT"/>test_ticket_11320()<br ALIGN="LEFT"/>test_tickets_8921_9188()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"queries.tests.QuerySetSupportsPythonIdioms" [color="black", fontcolor="black", label=<{QuerySetSupportsPythonIdioms|<br ALIGN="LEFT"/>|get_ordered_articles()<br ALIGN="LEFT"/>setUpTestData()<br ALIGN="LEFT"/>test_can_combine_queries_using_and_and_or_operators()<br ALIGN="LEFT"/>test_can_get_items_using_index_and_slice_notation()<br ALIGN="LEFT"/>test_can_get_number_of_items_in_queryset_using_standard_len()<br ALIGN="LEFT"/>test_slicing_can_slice_again_after_slicing()<br ALIGN="LEFT"/>test_slicing_cannot_combine_queries_once_sliced()<br ALIGN="LEFT"/>test_slicing_cannot_filter_queryset_once_sliced()<br ALIGN="LEFT"/>test_slicing_cannot_reorder_queryset_once_sliced()<br ALIGN="LEFT"/>test_slicing_negative_indexing_not_supported_for_range()<br ALIGN="LEFT"/>test_slicing_negative_indexing_not_supported_for_single_element()<br ALIGN="LEFT"/>test_slicing_with_steps_can_be_used()<br ALIGN="LEFT"/>test_slicing_with_tests_is_not_lazy()<br ALIGN="LEFT"/>test_slicing_without_step_is_lazy()<br ALIGN="LEFT"/>test_slicing_works_with_longs()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"queries.tests.QuerysetOrderedTests" [color="black", fontcolor="black", label=<{QuerysetOrderedTests|<br ALIGN="LEFT"/>|test_annotated_ordering()<br ALIGN="LEFT"/>test_cleared_default_ordering()<br ALIGN="LEFT"/>test_explicit_ordering()<br ALIGN="LEFT"/>test_no_default_or_explicit_ordering()<br ALIGN="LEFT"/>test_order_by_extra()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"queries.models.Ranking" [color="black", fontcolor="black", label=<{Ranking|author<br ALIGN="LEFT"/>rank<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.tests.RawQueriesTests" [color="black", fontcolor="black", label=<{RawQueriesTests|<br ALIGN="LEFT"/>|setUp()<br ALIGN="LEFT"/>test_ticket14729()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"queries.tests.RelabelCloneTest" [color="black", fontcolor="black", label=<{RelabelCloneTest|<br ALIGN="LEFT"/>|test_ticket_19964()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"queries.models.Related" [color="black", fontcolor="black", label=<{Related|custom<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.RelatedIndividual" [color="black", fontcolor="black", label=<{RelatedIndividual|related<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.tests.RelatedLookupTypeTests" [color="black", fontcolor="black", label=<{RelatedLookupTypeTests|error : str<br ALIGN="LEFT"/>|setUpTestData()<br ALIGN="LEFT"/>test_correct_lookup()<br ALIGN="LEFT"/>test_values_queryset_lookup()<br ALIGN="LEFT"/>test_wrong_backward_lookup()<br ALIGN="LEFT"/>test_wrong_type_lookup()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"queries.models.RelatedObject" [color="black", fontcolor="black", label=<{RelatedObject|f<br ALIGN="LEFT"/>single<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.Report" [color="black", fontcolor="black", label=<{Report|creator<br ALIGN="LEFT"/>name<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.ReservedName" [color="black", fontcolor="black", label=<{ReservedName|name<br ALIGN="LEFT"/>order<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.Responsibility" [color="black", fontcolor="black", label=<{Responsibility|description<br ALIGN="LEFT"/>jobs<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.tests.ReverseJoinTrimmingTest" [color="black", fontcolor="black", label=<{ReverseJoinTrimmingTest|<br ALIGN="LEFT"/>|test_reverse_trimming()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"queries.tests.ReverseM2MCustomPkTests" [color="black", fontcolor="black", label=<{ReverseM2MCustomPkTests|<br ALIGN="LEFT"/>|test_ticket_21879()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"queries.models.School" [color="black", fontcolor="black", label=<{School|<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.tests.SelectRelatedTests" [color="black", fontcolor="black", label=<{SelectRelatedTests|<br ALIGN="LEFT"/>|test_tickets_3045_3288()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"queries.models.SharedConnection" [color="black", fontcolor="black", label=<{SharedConnection|data<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.SimpleCategory" [color="black", fontcolor="black", label=<{SimpleCategory|name<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.SingleObject" [color="black", fontcolor="black", label=<{SingleObject|name<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.SpecialCategory" [color="black", fontcolor="black", label=<{SpecialCategory|special_name<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.Staff" [color="black", fontcolor="black", label=<{Staff|name<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.StaffUser" [color="black", fontcolor="black", label=<{StaffUser|staff<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.Student" [color="black", fontcolor="black", label=<{Student|school<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.tests.SubclassFKTests" [color="black", fontcolor="black", label=<{SubclassFKTests|<br ALIGN="LEFT"/>|test_ticket7778()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"queries.tests.SubqueryTests" [color="black", fontcolor="black", label=<{SubqueryTests|<br ALIGN="LEFT"/>|setUpTestData()<br ALIGN="LEFT"/>test_ordered_subselect()<br ALIGN="LEFT"/>test_related_sliced_subquery()<br ALIGN="LEFT"/>test_slice_subquery_and_query()<br ALIGN="LEFT"/>test_sliced_delete()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"queries.models.Tag" [color="black", fontcolor="black", label=<{Tag|category<br ALIGN="LEFT"/>name<br ALIGN="LEFT"/>parent<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.Task" [color="black", fontcolor="black", label=<{Task|creator<br ALIGN="LEFT"/>owner<br ALIGN="LEFT"/>title<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.tests.TestTicket24605" [color="black", fontcolor="black", label=<{TestTicket24605|<br ALIGN="LEFT"/>|test_ticket_24605()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"queries.tests.Ticket12807Tests" [color="black", fontcolor="black", label=<{Ticket12807Tests|<br ALIGN="LEFT"/>|test_ticket_12807()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"queries.tests.Ticket14056Tests" [color="black", fontcolor="black", label=<{Ticket14056Tests|<br ALIGN="LEFT"/>|test_ticket_14056()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"queries.tests.Ticket18785Tests" [color="black", fontcolor="black", label=<{Ticket18785Tests|<br ALIGN="LEFT"/>|test_ticket_18785()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"queries.tests.Ticket20101Tests" [color="black", fontcolor="black", label=<{Ticket20101Tests|<br ALIGN="LEFT"/>|test_ticket_20101()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"queries.tests.Ticket20788Tests" [color="black", fontcolor="black", label=<{Ticket20788Tests|<br ALIGN="LEFT"/>|test_ticket_20788()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"queries.tests.Ticket20955Tests" [color="black", fontcolor="black", label=<{Ticket20955Tests|<br ALIGN="LEFT"/>|test_ticket_20955()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"queries.models.Ticket21203Child" [color="black", fontcolor="black", label=<{Ticket21203Child|childid<br ALIGN="LEFT"/>parent<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.Ticket21203Parent" [color="black", fontcolor="black", label=<{Ticket21203Parent|created<br ALIGN="LEFT"/>parent_bool<br ALIGN="LEFT"/>parentid<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.tests.Ticket21203Tests" [color="black", fontcolor="black", label=<{Ticket21203Tests|<br ALIGN="LEFT"/>|test_ticket_21203()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"queries.tests.Ticket22429Tests" [color="black", fontcolor="black", label=<{Ticket22429Tests|<br ALIGN="LEFT"/>|test_ticket_22429()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"queries.models.Ticket23605A" [color="black", fontcolor="black", label=<{Ticket23605A|<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.Ticket23605B" [color="black", fontcolor="black", label=<{Ticket23605B|field_b0<br ALIGN="LEFT"/>field_b1<br ALIGN="LEFT"/>modela_fk<br ALIGN="LEFT"/>modelc_fk<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.Ticket23605C" [color="black", fontcolor="black", label=<{Ticket23605C|field_c0<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.tests.Ticket23605Tests" [color="black", fontcolor="black", label=<{Ticket23605Tests|<br ALIGN="LEFT"/>|test_ticket_23605()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"queries.tests.ToFieldTests" [color="black", fontcolor="black", label=<{ToFieldTests|<br ALIGN="LEFT"/>|test_in_query()<br ALIGN="LEFT"/>test_recursive_fk()<br ALIGN="LEFT"/>test_recursive_fk_reverse()<br ALIGN="LEFT"/>test_reverse_in()<br ALIGN="LEFT"/>test_single_object()<br ALIGN="LEFT"/>test_single_object_reverse()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"queries.models.TvChef" [color="black", fontcolor="black", label=<{TvChef|<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.tests.UnionTests" [color="black", fontcolor="black", label=<{UnionTests|<br ALIGN="LEFT"/>|check_union(model, Q1, Q2)<br ALIGN="LEFT"/>setUpTestData()<br ALIGN="LEFT"/>test_AB_ACB()<br ALIGN="LEFT"/>test_A_AB()<br ALIGN="LEFT"/>test_A_AB2()<br ALIGN="LEFT"/>test_BAB_BAC()<br ALIGN="LEFT"/>test_BAB_BACB()<br ALIGN="LEFT"/>test_BA_BCA__BAB_BAC_BCA()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"queries.models.Valid" [color="black", fontcolor="black", label=<{Valid|parent<br ALIGN="LEFT"/>valid<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.tests.ValuesJoinPromotionTests" [color="black", fontcolor="black", label=<{ValuesJoinPromotionTests|<br ALIGN="LEFT"/>|test_non_nullable_fk_not_promoted()<br ALIGN="LEFT"/>test_ticket_21376()<br ALIGN="LEFT"/>test_values_no_promotion_for_existing()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"queries.tests.ValuesQuerysetTests" [color="black", fontcolor="black", label=<{ValuesQuerysetTests|<br ALIGN="LEFT"/>|setUpTestData()<br ALIGN="LEFT"/>test_extra_multiple_select_params_values_order_by()<br ALIGN="LEFT"/>test_extra_select_params_values_order_in_extra()<br ALIGN="LEFT"/>test_extra_values()<br ALIGN="LEFT"/>test_extra_values_list()<br ALIGN="LEFT"/>test_extra_values_order_in_extra()<br ALIGN="LEFT"/>test_extra_values_order_multiple()<br ALIGN="LEFT"/>test_extra_values_order_twice()<br ALIGN="LEFT"/>test_field_error_values_list()<br ALIGN="LEFT"/>test_flat_extra_values_list()<br ALIGN="LEFT"/>test_flat_values_list()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"queries.tests.ValuesSubqueryTests" [color="black", fontcolor="black", label=<{ValuesSubqueryTests|<br ALIGN="LEFT"/>|test_values_in_subquery()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"queries.tests.WeirdQuerysetSlicingTests" [color="black", fontcolor="black", label=<{WeirdQuerysetSlicingTests|<br ALIGN="LEFT"/>|setUpTestData()<br ALIGN="LEFT"/>test_empty_resultset_sql()<br ALIGN="LEFT"/>test_tickets_7698_10202()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"queries.tests.WhereNodeTest" [color="black", fontcolor="black", label=<{WhereNodeTest|<br ALIGN="LEFT"/>|test_empty_full_handling_conjunction()<br ALIGN="LEFT"/>test_empty_full_handling_disjunction()<br ALIGN="LEFT"/>test_empty_nodes()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"queries.models.X" [color="black", fontcolor="black", label=<{X|y<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.Y" [color="black", fontcolor="black", label=<{Y|x1<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"queries.models.ChildObjectA" -> "queries.models.ObjectA" [arrowhead="empty", arrowtail="none"];
"queries.models.NamedCategory" -> "queries.models.DumbCategory" [arrowhead="empty", arrowtail="none"];
"queries.models.ProxyCategory" -> "queries.models.DumbCategory" [arrowhead="empty", arrowtail="none"];
"queries.models.ProxyObjectA" -> "queries.models.ObjectA" [arrowhead="empty", arrowtail="none"];
"queries.models.ProxyObjectB" -> "queries.models.ObjectB" [arrowhead="empty", arrowtail="none"];
"queries.models.SpecialCategory" -> "queries.models.SimpleCategory" [arrowhead="empty", arrowtail="none"];
"queries.models.StaffUser" -> "queries.models.BaseUser" [arrowhead="empty", arrowtail="none"];
"queries.models.TvChef" -> "queries.models.Celebrity" [arrowhead="empty", arrowtail="none"];
"queries.tests.ConditionalTests" -> "queries.tests.BaseQuerysetTest" [arrowhead="empty", arrowtail="none"];
"queries.tests.Queries1Tests" -> "queries.tests.BaseQuerysetTest" [arrowhead="empty", arrowtail="none"];
"queries.tests.Queries3Tests" -> "queries.tests.BaseQuerysetTest" [arrowhead="empty", arrowtail="none"];
"queries.tests.Queries4Tests" -> "queries.tests.BaseQuerysetTest" [arrowhead="empty", arrowtail="none"];
"queries.tests.ValuesQuerysetTests" -> "queries.tests.BaseQuerysetTest" [arrowhead="empty", arrowtail="none"];
"queries.tests.WeirdQuerysetSlicingTests" -> "queries.tests.BaseQuerysetTest" [arrowhead="empty", arrowtail="none"];
"queries.models.CustomManager" -> "queries.models.ManagedModel" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="objects", style="solid"];
"queries.models.MemberManager" -> "queries.models.Member" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="objects", style="solid"];
}
