digraph "classes_37" {
rankdir=BT
charset="utf-8"
"model_fields.models.AbsctractPersonWithHeight" [color="black", fontcolor="black", label=<{AbsctractPersonWithHeight|mugshot<br ALIGN="LEFT"/>mugshot_height<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"model_fields.models.AllFieldsModel" [color="black", fontcolor="black", label=<{AllFieldsModel|big_integer<br ALIGN="LEFT"/>binary<br ALIGN="LEFT"/>boolean<br ALIGN="LEFT"/>char<br ALIGN="LEFT"/>content_type<br ALIGN="LEFT"/>csv<br ALIGN="LEFT"/>date<br ALIGN="LEFT"/>datetime<br ALIGN="LEFT"/>decimal<br ALIGN="LEFT"/>duration<br ALIGN="LEFT"/>email<br ALIGN="LEFT"/>file_path<br ALIGN="LEFT"/>fk<br ALIGN="LEFT"/>floatf<br ALIGN="LEFT"/>fo<br ALIGN="LEFT"/>generic_ip<br ALIGN="LEFT"/>gfk<br ALIGN="LEFT"/>gr<br ALIGN="LEFT"/>integer<br ALIGN="LEFT"/>ip_address<br ALIGN="LEFT"/>m2m<br ALIGN="LEFT"/>null_boolean<br ALIGN="LEFT"/>object_id<br ALIGN="LEFT"/>oto<br ALIGN="LEFT"/>positive_integer<br ALIGN="LEFT"/>positive_small_integer<br ALIGN="LEFT"/>slug<br ALIGN="LEFT"/>small_integer<br ALIGN="LEFT"/>text<br ALIGN="LEFT"/>time<br ALIGN="LEFT"/>url<br ALIGN="LEFT"/>uuid<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"model_fields.models.Bar" [color="black", fontcolor="black", label=<{Bar|a<br ALIGN="LEFT"/>b<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"model_fields.tests.BasicFieldTests" [color="black", fontcolor="black", label=<{BasicFieldTests|<br ALIGN="LEFT"/>|test_choices_form_class()<br ALIGN="LEFT"/>test_field_name()<br ALIGN="LEFT"/>test_field_repr()<br ALIGN="LEFT"/>test_field_str()<br ALIGN="LEFT"/>test_field_verbose_name()<br ALIGN="LEFT"/>test_float_validates_object()<br ALIGN="LEFT"/>test_nullbooleanfield_blank()<br ALIGN="LEFT"/>test_show_hidden_initial()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"model_fields.models.BigD" [color="black", fontcolor="black", label=<{BigD|d<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"model_fields.tests.BigIntegerFieldTests" [color="black", fontcolor="black", label=<{BigIntegerFieldTests|documented_range : tuple<br ALIGN="LEFT"/>model<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"model_fields.models.BigIntegerModel" [color="black", fontcolor="black", label=<{BigIntegerModel|null_value<br ALIGN="LEFT"/>value<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"model_fields.models.BigS" [color="black", fontcolor="black", label=<{BigS|s<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"model_fields.tests.BinaryFieldTests" [color="black", fontcolor="black", label=<{BinaryFieldTests|binary_data : bytes<br ALIGN="LEFT"/>|test_max_length()<br ALIGN="LEFT"/>test_set_and_retrieve()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"model_fields.tests.BooleanFieldTests" [color="black", fontcolor="black", label=<{BooleanFieldTests|<br ALIGN="LEFT"/>|test_booleanfield_choices_blank()<br ALIGN="LEFT"/>test_booleanfield_get_db_prep_lookup()<br ALIGN="LEFT"/>test_booleanfield_to_python()<br ALIGN="LEFT"/>test_charfield_textfield_max_length_passed_to_formfield()<br ALIGN="LEFT"/>test_null_default()<br ALIGN="LEFT"/>test_nullbooleanfield_get_db_prep_lookup()<br ALIGN="LEFT"/>test_nullbooleanfield_to_python()<br ALIGN="LEFT"/>test_return_type()<br ALIGN="LEFT"/>test_select_related()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"model_fields.models.BooleanModel" [color="black", fontcolor="black", label=<{BooleanModel|bfield<br ALIGN="LEFT"/>string<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"model_fields.tests.ChoicesTests" [color="black", fontcolor="black", label=<{ChoicesTests|<br ALIGN="LEFT"/>|test_charfield_get_choices_with_blank_iterator()<br ALIGN="LEFT"/>test_choices_and_field_display()<br ALIGN="LEFT"/>test_empty_iterator_choices()<br ALIGN="LEFT"/>test_iterator_choices()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"model_fields.models.Counter" [color="black", fontcolor="black", label=<{Counter|n : int<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"model_fields.tests.CustomFieldTests" [color="black", fontcolor="black", label=<{CustomFieldTests|<br ALIGN="LEFT"/>|test_14786()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"model_fields.models.DataModel" [color="black", fontcolor="black", label=<{DataModel|data<br ALIGN="LEFT"/>short_data<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"model_fields.tests.DateTimeFieldTests" [color="black", fontcolor="black", label=<{DateTimeFieldTests|<br ALIGN="LEFT"/>|test_datetimefield_to_python_usecs()<br ALIGN="LEFT"/>test_datetimes_save_completely()<br ALIGN="LEFT"/>test_timefield_to_python_usecs()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"model_fields.models.DateTimeModel" [color="black", fontcolor="black", label=<{DateTimeModel|d<br ALIGN="LEFT"/>dt<br ALIGN="LEFT"/>t<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"model_fields.tests.DecimalFieldTests" [color="black", fontcolor="black", label=<{DecimalFieldTests|<br ALIGN="LEFT"/>|test_default()<br ALIGN="LEFT"/>test_filter_with_strings()<br ALIGN="LEFT"/>test_format()<br ALIGN="LEFT"/>test_get_db_prep_lookup()<br ALIGN="LEFT"/>test_lookup_really_big_value()<br ALIGN="LEFT"/>test_save_without_float_conversion()<br ALIGN="LEFT"/>test_to_python()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"model_fields.models.DecimalLessThanOne" [color="black", fontcolor="black", label=<{DecimalLessThanOne|d<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"model_fields.models.Document" [color="black", fontcolor="black", label=<{Document|myfile<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"model_fields.models.DurationModel" [color="black", fontcolor="black", label=<{DurationModel|field<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"model_fields.tests.ForeignKeyTests.test_warning_when_unique_true_on_fk.FKUniqueTrue" [color="black", fontcolor="black", label=<{FKUniqueTrue|fk_field<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"model_fields.models.FieldClassAttributeModel" [color="black", fontcolor="black", label=<{FieldClassAttributeModel|field_class<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"model_fields.test_field_flags.FieldFlagsTests" [color="black", fontcolor="black", label=<{FieldFlagsTests|<br ALIGN="LEFT"/>|setUpClass()<br ALIGN="LEFT"/>test_all_field_types_should_have_flags()<br ALIGN="LEFT"/>test_cardinality_m2m()<br ALIGN="LEFT"/>test_cardinality_m2o()<br ALIGN="LEFT"/>test_cardinality_o2m()<br ALIGN="LEFT"/>test_cardinality_o2o()<br ALIGN="LEFT"/>test_each_field_should_have_a_concrete_attribute()<br ALIGN="LEFT"/>test_each_field_should_have_a_has_rel_attribute()<br ALIGN="LEFT"/>test_each_field_should_have_an_editable_attribute()<br ALIGN="LEFT"/>test_each_object_should_have_auto_created()<br ALIGN="LEFT"/>test_field_names_should_always_be_available()<br ALIGN="LEFT"/>test_hidden_flag()<br ALIGN="LEFT"/>test_model_and_reverse_model_should_equal_on_relations()<br ALIGN="LEFT"/>test_non_concrete_fields()<br ALIGN="LEFT"/>test_non_editable_fields()<br ALIGN="LEFT"/>test_related_fields()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"model_fields.tests.FileFieldTests" [color="black", fontcolor="black", label=<{FileFieldTests|<br ALIGN="LEFT"/>|test_changed()<br ALIGN="LEFT"/>test_clearable()<br ALIGN="LEFT"/>test_delete_when_file_unset()<br ALIGN="LEFT"/>test_unchanged()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"model_fields.models.FkToChar" [color="black", fontcolor="black", label=<{FkToChar|out<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"model_fields.models.FksToBooleans" [color="black", fontcolor="black", label=<{FksToBooleans|bf<br ALIGN="LEFT"/>nbf<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"model_fields.models.FloatModel" [color="black", fontcolor="black", label=<{FloatModel|size<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"model_fields.models.Foo" [color="black", fontcolor="black", label=<{Foo|a<br ALIGN="LEFT"/>d<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"model_fields.tests.ForeignKeyTests" [color="black", fontcolor="black", label=<{ForeignKeyTests|<br ALIGN="LEFT"/>|test_callable_default()<br ALIGN="LEFT"/>test_empty_string_fk()<br ALIGN="LEFT"/>test_related_name_converted_to_text()<br ALIGN="LEFT"/>test_warning_when_unique_true_on_fk()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"model_fields.models.GenericIPAddress" [color="black", fontcolor="black", label=<{GenericIPAddress|ip<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"model_fields.tests.GenericIPAddressFieldTests" [color="black", fontcolor="black", label=<{GenericIPAddressFieldTests|<br ALIGN="LEFT"/>|test_genericipaddressfield_formfield_protocol()<br ALIGN="LEFT"/>test_null_value()<br ALIGN="LEFT"/>test_save_load()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"model_fields.tests.PromiseTest.test_IPAddressField_deprecated.IPAddressModel" [color="black", fontcolor="black", label=<{IPAddressModel|ip<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"model_fields.test_imagefield.ImageFieldDimensionsFirstTests" [color="black", fontcolor="black", label=<{ImageFieldDimensionsFirstTests|PersonModel : Person<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"model_fields.test_imagefield.ImageFieldNoDimensionsTests" [color="black", fontcolor="black", label=<{ImageFieldNoDimensionsTests|PersonModel : Person<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"model_fields.test_imagefield.ImageFieldOneDimensionTests" [color="black", fontcolor="black", label=<{ImageFieldOneDimensionTests|PersonModel : Person<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"model_fields.test_imagefield.ImageFieldTestMixin" [color="black", fontcolor="black", label=<{ImageFieldTestMixin|File<br ALIGN="LEFT"/>PersonModel : Person<br ALIGN="LEFT"/>file1<br ALIGN="LEFT"/>file2<br ALIGN="LEFT"/>|check_dimensions(instance, width, height, field_name)<br ALIGN="LEFT"/>setUp()<br ALIGN="LEFT"/>tearDown()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"model_fields.test_imagefield.ImageFieldTests" [color="black", fontcolor="black", label=<{ImageFieldTests|<br ALIGN="LEFT"/>|test_delete_when_missing()<br ALIGN="LEFT"/>test_equal_notequal_hash()<br ALIGN="LEFT"/>test_instantiate_missing()<br ALIGN="LEFT"/>test_pickle()<br ALIGN="LEFT"/>test_size_method()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"model_fields.test_imagefield.ImageFieldTwoDimensionsTests" [color="black", fontcolor="black", label=<{ImageFieldTwoDimensionsTests|<br ALIGN="LEFT"/>|test_assignment_to_None()<br ALIGN="LEFT"/>test_constructor()<br ALIGN="LEFT"/>test_create()<br ALIGN="LEFT"/>test_default_value()<br ALIGN="LEFT"/>test_dimensions()<br ALIGN="LEFT"/>test_field_save_and_delete_methods()<br ALIGN="LEFT"/>test_image_after_constructor()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"model_fields.test_imagefield.ImageFieldUsingFileTests" [color="black", fontcolor="black", label=<{ImageFieldUsingFileTests|File<br ALIGN="LEFT"/>PersonModel : Person<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"model_fields.tests.IntegerFieldTests" [color="black", fontcolor="black", label=<{IntegerFieldTests|documented_range : tuple<br ALIGN="LEFT"/>model<br ALIGN="LEFT"/>|test_backend_range_validation()<br ALIGN="LEFT"/>test_coercing()<br ALIGN="LEFT"/>test_documented_range()<br ALIGN="LEFT"/>test_types()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"model_fields.models.IntegerModel" [color="black", fontcolor="black", label=<{IntegerModel|value<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"model_fields.models.AbsctractPersonWithHeight.Meta" [color="black", fontcolor="black", label=<{Meta|abstract : bool<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"model_fields.tests.CustomFieldTests.test_14786.NoopField" [color="black", fontcolor="black", label=<{NoopField|prep_value_count : int<br ALIGN="LEFT"/>|get_prep_value(value)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"model_fields.models.NullBooleanModel" [color="black", fontcolor="black", label=<{NullBooleanModel|nbfield<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"model_fields.models.NullDurationModel" [color="black", fontcolor="black", label=<{NullDurationModel|field<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"model_fields.models.NullableUUIDModel" [color="black", fontcolor="black", label=<{NullableUUIDModel|field<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"model_fields.models.Person" [color="black", fontcolor="black", label=<{Person|mugshot<br ALIGN="LEFT"/>name<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"model_fields.models.PersonDimensionsFirst" [color="black", fontcolor="black", label=<{PersonDimensionsFirst|mugshot<br ALIGN="LEFT"/>mugshot_height<br ALIGN="LEFT"/>mugshot_width<br ALIGN="LEFT"/>name<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"model_fields.models.PersonTwoImages" [color="black", fontcolor="black", label=<{PersonTwoImages|headshot<br ALIGN="LEFT"/>headshot_height<br ALIGN="LEFT"/>headshot_width<br ALIGN="LEFT"/>mugshot<br ALIGN="LEFT"/>mugshot_height<br ALIGN="LEFT"/>mugshot_width<br ALIGN="LEFT"/>name<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"model_fields.models.PersonWithHeight" [color="black", fontcolor="black", label=<{PersonWithHeight|name<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"model_fields.models.PersonWithHeightAndWidth" [color="black", fontcolor="black", label=<{PersonWithHeightAndWidth|mugshot<br ALIGN="LEFT"/>mugshot_height<br ALIGN="LEFT"/>mugshot_width<br ALIGN="LEFT"/>name<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"model_fields.tests.PositiveIntegerFieldTests" [color="black", fontcolor="black", label=<{PositiveIntegerFieldTests|documented_range : tuple<br ALIGN="LEFT"/>model<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"model_fields.models.PositiveIntegerModel" [color="black", fontcolor="black", label=<{PositiveIntegerModel|value<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"model_fields.tests.PositiveSmallIntegerFieldTests" [color="black", fontcolor="black", label=<{PositiveSmallIntegerFieldTests|documented_range : tuple<br ALIGN="LEFT"/>model<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"model_fields.models.PositiveSmallIntegerModel" [color="black", fontcolor="black", label=<{PositiveSmallIntegerModel|value<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"model_fields.models.Post" [color="black", fontcolor="black", label=<{Post|body<br ALIGN="LEFT"/>title<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"model_fields.models.PrimaryKeyCharModel" [color="black", fontcolor="black", label=<{PrimaryKeyCharModel|string<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"model_fields.models.PrimaryKeyUUIDModel" [color="black", fontcolor="black", label=<{PrimaryKeyUUIDModel|id<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"model_fields.tests.PromiseTest" [color="black", fontcolor="black", label=<{PromiseTest|<br ALIGN="LEFT"/>|test_AutoField()<br ALIGN="LEFT"/>test_BigIntegerField()<br ALIGN="LEFT"/>test_BinaryField()<br ALIGN="LEFT"/>test_BooleanField()<br ALIGN="LEFT"/>test_CharField()<br ALIGN="LEFT"/>test_CommaSeparatedIntegerField()<br ALIGN="LEFT"/>test_DateField()<br ALIGN="LEFT"/>test_DateTimeField()<br ALIGN="LEFT"/>test_DecimalField()<br ALIGN="LEFT"/>test_EmailField()<br ALIGN="LEFT"/>test_FileField()<br ALIGN="LEFT"/>test_FilePathField()<br ALIGN="LEFT"/>test_FloatField()<br ALIGN="LEFT"/>test_GenericIPAddressField()<br ALIGN="LEFT"/>test_IPAddressField()<br ALIGN="LEFT"/>test_IPAddressField_deprecated()<br ALIGN="LEFT"/>test_ImageField()<br ALIGN="LEFT"/>test_IntegerField()<br ALIGN="LEFT"/>test_NullBooleanField()<br ALIGN="LEFT"/>test_PositiveIntegerField()<br ALIGN="LEFT"/>test_PositiveSmallIntegerField()<br ALIGN="LEFT"/>test_SlugField()<br ALIGN="LEFT"/>test_SmallIntegerField()<br ALIGN="LEFT"/>test_TextField()<br ALIGN="LEFT"/>test_TimeField()<br ALIGN="LEFT"/>test_URLField()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"model_fields.models.RelatedToUUIDModel" [color="black", fontcolor="black", label=<{RelatedToUUIDModel|uuid_fk<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"model_fields.models.RenamedField" [color="black", fontcolor="black", label=<{RenamedField|modelname<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"model_fields.tests.SlugFieldTests" [color="black", fontcolor="black", label=<{SlugFieldTests|<br ALIGN="LEFT"/>|test_slugfield_max_length()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"model_fields.tests.SmallIntegerFieldTests" [color="black", fontcolor="black", label=<{SmallIntegerFieldTests|documented_range : tuple<br ALIGN="LEFT"/>model<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"model_fields.models.SmallIntegerModel" [color="black", fontcolor="black", label=<{SmallIntegerModel|value<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"model_fields.test_uuid.TestAsPrimaryKey" [color="black", fontcolor="black", label=<{TestAsPrimaryKey|<br ALIGN="LEFT"/>|test_creation()<br ALIGN="LEFT"/>test_two_level_foreign_keys()<br ALIGN="LEFT"/>test_underlying_field()<br ALIGN="LEFT"/>test_update_with_related_model_id()<br ALIGN="LEFT"/>test_update_with_related_model_instance()<br ALIGN="LEFT"/>test_uuid_pk_on_bulk_create()<br ALIGN="LEFT"/>test_uuid_pk_on_save()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"model_fields.test_durationfield.TestFormField" [color="black", fontcolor="black", label=<{TestFormField|<br ALIGN="LEFT"/>|test_formfield()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"model_fields.models.TestImageField" [color="black", fontcolor="black", label=<{TestImageField|attr_class<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"model_fields.models.TestImageFieldFile" [color="black", fontcolor="black", label=<{TestImageFieldFile|was_opened : bool<br ALIGN="LEFT"/>|open()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"model_fields.test_uuid.TestMigrations" [color="black", fontcolor="black", label=<{TestMigrations|<br ALIGN="LEFT"/>|test_deconstruct()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"model_fields.test_durationfield.TestQuerying" [color="black", fontcolor="black", label=<{TestQuerying|<br ALIGN="LEFT"/>|setUpTestData()<br ALIGN="LEFT"/>test_exact()<br ALIGN="LEFT"/>test_gt()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"model_fields.test_uuid.TestQuerying" [color="black", fontcolor="black", label=<{TestQuerying|objs : list<br ALIGN="LEFT"/>|setUp()<br ALIGN="LEFT"/>test_exact()<br ALIGN="LEFT"/>test_isnull()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"model_fields.test_durationfield.TestSaveLoad" [color="black", fontcolor="black", label=<{TestSaveLoad|<br ALIGN="LEFT"/>|test_create_empty()<br ALIGN="LEFT"/>test_simple_roundtrip()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"model_fields.test_uuid.TestSaveLoad" [color="black", fontcolor="black", label=<{TestSaveLoad|<br ALIGN="LEFT"/>|test_null_handling()<br ALIGN="LEFT"/>test_str_instance_bad_hyphens()<br ALIGN="LEFT"/>test_str_instance_hyphens()<br ALIGN="LEFT"/>test_str_instance_no_hyphens()<br ALIGN="LEFT"/>test_uuid_instance()<br ALIGN="LEFT"/>test_wrong_value()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"model_fields.test_durationfield.TestSerialization" [color="black", fontcolor="black", label=<{TestSerialization|test_data : str<br ALIGN="LEFT"/>|test_dumping()<br ALIGN="LEFT"/>test_loading()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"model_fields.test_uuid.TestSerialization" [color="black", fontcolor="black", label=<{TestSerialization|test_data : str<br ALIGN="LEFT"/>|test_dumping()<br ALIGN="LEFT"/>test_loading()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"model_fields.test_durationfield.TestValidation" [color="black", fontcolor="black", label=<{TestValidation|<br ALIGN="LEFT"/>|test_invalid_string()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"model_fields.test_uuid.TestValidation" [color="black", fontcolor="black", label=<{TestValidation|<br ALIGN="LEFT"/>|test_invalid_uuid()<br ALIGN="LEFT"/>test_uuid_instance_ok()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"model_fields.test_imagefield.TwoImageFieldTests" [color="black", fontcolor="black", label=<{TwoImageFieldTests|PersonModel : Person<br ALIGN="LEFT"/>|test_assignment()<br ALIGN="LEFT"/>test_constructor()<br ALIGN="LEFT"/>test_create()<br ALIGN="LEFT"/>test_dimensions()<br ALIGN="LEFT"/>test_field_save_and_delete_methods()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"model_fields.tests.TypeCoercionTests" [color="black", fontcolor="black", label=<{TypeCoercionTests|<br ALIGN="LEFT"/>|test_lookup_integer_in_charfield()<br ALIGN="LEFT"/>test_lookup_integer_in_textfield()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"model_fields.models.UUIDChild" [color="black", fontcolor="black", label=<{UUIDChild|<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"model_fields.models.UUIDGrandchild" [color="black", fontcolor="black", label=<{UUIDGrandchild|<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"model_fields.models.UUIDModel" [color="black", fontcolor="black", label=<{UUIDModel|field<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"model_fields.tests.ValidationTest" [color="black", fontcolor="black", label=<{ValidationTest|<br ALIGN="LEFT"/>|test_boolean_field_doesnt_accept_empty_input()<br ALIGN="LEFT"/>test_charfield_cleans_empty_string_when_blank_true()<br ALIGN="LEFT"/>test_charfield_get_choices_doesnt_evaluate_lazy_strings()<br ALIGN="LEFT"/>test_charfield_get_choices_with_blank_defined()<br ALIGN="LEFT"/>test_charfield_raises_error_on_empty_input()<br ALIGN="LEFT"/>test_charfield_raises_error_on_empty_string()<br ALIGN="LEFT"/>test_charfield_with_choices_cleans_valid_choice()<br ALIGN="LEFT"/>test_charfield_with_choices_raises_error_on_invalid_choice()<br ALIGN="LEFT"/>test_choices_validation_supports_named_groups()<br ALIGN="LEFT"/>test_datefield_cleans_date()<br ALIGN="LEFT"/>test_integerfield_cleans_valid_string()<br ALIGN="LEFT"/>test_integerfield_raises_error_on_empty_input()<br ALIGN="LEFT"/>test_integerfield_raises_error_on_invalid_intput()<br ALIGN="LEFT"/>test_integerfield_validates_zero_against_choices()<br ALIGN="LEFT"/>test_nullable_integerfield_cleans_none_on_null_and_blank_true()<br ALIGN="LEFT"/>test_nullable_integerfield_raises_error_with_blank_false()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"model_fields.models.VerboseNameField" [color="black", fontcolor="black", label=<{VerboseNameField|field1<br ALIGN="LEFT"/>field10<br ALIGN="LEFT"/>field11<br ALIGN="LEFT"/>field12<br ALIGN="LEFT"/>field13<br ALIGN="LEFT"/>field14<br ALIGN="LEFT"/>field15<br ALIGN="LEFT"/>field16<br ALIGN="LEFT"/>field17<br ALIGN="LEFT"/>field18<br ALIGN="LEFT"/>field19<br ALIGN="LEFT"/>field2<br ALIGN="LEFT"/>field20<br ALIGN="LEFT"/>field21<br ALIGN="LEFT"/>field22<br ALIGN="LEFT"/>field23<br ALIGN="LEFT"/>field24<br ALIGN="LEFT"/>field3<br ALIGN="LEFT"/>field4<br ALIGN="LEFT"/>field5<br ALIGN="LEFT"/>field6<br ALIGN="LEFT"/>field7<br ALIGN="LEFT"/>field8<br ALIGN="LEFT"/>field9<br ALIGN="LEFT"/>id<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"model_fields.models.Whiz" [color="black", fontcolor="black", label=<{Whiz|CHOICES : tuple<br ALIGN="LEFT"/>c<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"model_fields.models.WhizIter" [color="black", fontcolor="black", label=<{WhizIter|c<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"model_fields.models.WhizIterEmpty" [color="black", fontcolor="black", label=<{WhizIterEmpty|c<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"model_fields.models.PersonWithHeight" -> "model_fields.models.AbsctractPersonWithHeight" [arrowhead="empty", arrowtail="none"];
"model_fields.models.UUIDChild" -> "model_fields.models.PrimaryKeyUUIDModel" [arrowhead="empty", arrowtail="none"];
"model_fields.models.UUIDGrandchild" -> "model_fields.models.UUIDChild" [arrowhead="empty", arrowtail="none"];
"model_fields.test_imagefield.ImageFieldDimensionsFirstTests" -> "model_fields.test_imagefield.ImageFieldTwoDimensionsTests" [arrowhead="empty", arrowtail="none"];
"model_fields.test_imagefield.ImageFieldNoDimensionsTests" -> "model_fields.test_imagefield.ImageFieldTwoDimensionsTests" [arrowhead="empty", arrowtail="none"];
"model_fields.test_imagefield.ImageFieldOneDimensionTests" -> "model_fields.test_imagefield.ImageFieldTwoDimensionsTests" [arrowhead="empty", arrowtail="none"];
"model_fields.test_imagefield.ImageFieldTests" -> "model_fields.test_imagefield.ImageFieldTestMixin" [arrowhead="empty", arrowtail="none"];
"model_fields.test_imagefield.ImageFieldTwoDimensionsTests" -> "model_fields.test_imagefield.ImageFieldTestMixin" [arrowhead="empty", arrowtail="none"];
"model_fields.test_imagefield.ImageFieldUsingFileTests" -> "model_fields.test_imagefield.ImageFieldTwoDimensionsTests" [arrowhead="empty", arrowtail="none"];
"model_fields.test_imagefield.TwoImageFieldTests" -> "model_fields.test_imagefield.ImageFieldTestMixin" [arrowhead="empty", arrowtail="none"];
"model_fields.tests.BigIntegerFieldTests" -> "model_fields.tests.IntegerFieldTests" [arrowhead="empty", arrowtail="none"];
"model_fields.tests.PositiveIntegerFieldTests" -> "model_fields.tests.IntegerFieldTests" [arrowhead="empty", arrowtail="none"];
"model_fields.tests.PositiveSmallIntegerFieldTests" -> "model_fields.tests.IntegerFieldTests" [arrowhead="empty", arrowtail="none"];
"model_fields.tests.SmallIntegerFieldTests" -> "model_fields.tests.IntegerFieldTests" [arrowhead="empty", arrowtail="none"];
"model_fields.models.BigIntegerModel" -> "model_fields.tests.BigIntegerFieldTests" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="model", style="solid"];
"model_fields.models.IntegerModel" -> "model_fields.tests.IntegerFieldTests" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="model", style="solid"];
"model_fields.models.Person" -> "model_fields.test_imagefield.ImageFieldNoDimensionsTests" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="PersonModel", style="solid"];
"model_fields.models.PersonDimensionsFirst" -> "model_fields.test_imagefield.ImageFieldDimensionsFirstTests" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="PersonModel", style="solid"];
"model_fields.models.PersonDimensionsFirst" -> "model_fields.test_imagefield.ImageFieldUsingFileTests" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="PersonModel", style="solid"];
"model_fields.models.PersonTwoImages" -> "model_fields.test_imagefield.TwoImageFieldTests" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="PersonModel", style="solid"];
"model_fields.models.PersonWithHeight" -> "model_fields.test_imagefield.ImageFieldOneDimensionTests" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="PersonModel", style="solid"];
"model_fields.models.PersonWithHeightAndWidth" -> "model_fields.test_imagefield.ImageFieldTestMixin" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="PersonModel", style="solid"];
"model_fields.models.PositiveIntegerModel" -> "model_fields.tests.PositiveIntegerFieldTests" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="model", style="solid"];
"model_fields.models.PositiveSmallIntegerModel" -> "model_fields.tests.PositiveSmallIntegerFieldTests" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="model", style="solid"];
"model_fields.models.SmallIntegerModel" -> "model_fields.tests.SmallIntegerFieldTests" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="model", style="solid"];
"model_fields.models.TestImageField" -> "model_fields.models.AbsctractPersonWithHeight" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="mugshot", style="solid"];
"model_fields.models.TestImageField" -> "model_fields.models.PersonDimensionsFirst" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="mugshot", style="solid"];
"model_fields.models.TestImageFieldFile" -> "model_fields.models.TestImageField" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="attr_class", style="solid"];
"model_fields.models.FloatModel" -> "model_fields.models.FloatModel" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="size", style="solid"];
}
