digraph "classes_4" {
rankdir=BT
charset="utf-8"
"admin_scripts.tests.AdminScriptTestCase" [color="black", fontcolor="black", label=<{AdminScriptTestCase|<br ALIGN="LEFT"/>|assertNoOutput(stream)<br ALIGN="LEFT"/>assertNotInOutput(stream, msg)<br ALIGN="LEFT"/>assertOutput(stream, msg, regex)<br ALIGN="LEFT"/>remove_settings(filename, is_dir)<br ALIGN="LEFT"/>run_django_admin(args, settings_file)<br ALIGN="LEFT"/>run_manage(args, settings_file)<br ALIGN="LEFT"/>run_test(script, args, settings_file, apps)<br ALIGN="LEFT"/>write_settings(filename, apps, is_dir, sdict, extra)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"admin_scripts.tests.ArgumentOrder" [color="black", fontcolor="black", label=<{ArgumentOrder|<br ALIGN="LEFT"/>|setUp()<br ALIGN="LEFT"/>tearDown()<br ALIGN="LEFT"/>test_option_then_setting()<br ALIGN="LEFT"/>test_option_then_setting_then_option()<br ALIGN="LEFT"/>test_setting_then_option()<br ALIGN="LEFT"/>test_setting_then_short_option()<br ALIGN="LEFT"/>test_short_option_then_setting()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"admin_scripts.tests.CommandTypes.test_command_color.Command" [color="black", fontcolor="black", label=<{Command|requires_system_checks : bool<br ALIGN="LEFT"/>|handle()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"admin_scripts.tests.CommandTypes.test_command_no_color.Command" [color="black", fontcolor="black", label=<{Command|requires_system_checks : bool<br ALIGN="LEFT"/>|handle()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"admin_scripts.tests.CommandTypes.test_custom_stdout.Command" [color="black", fontcolor="black", label=<{Command|requires_system_checks : bool<br ALIGN="LEFT"/>|handle()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"admin_scripts.tests.CommandTypes.test_custom_stderr.Command" [color="black", fontcolor="black", label=<{Command|requires_system_checks : bool<br ALIGN="LEFT"/>|handle()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"admin_scripts.tests.CommandTypes" [color="black", fontcolor="black", label=<{CommandTypes|<br ALIGN="LEFT"/>|setUp()<br ALIGN="LEFT"/>tearDown()<br ALIGN="LEFT"/>test_app_command()<br ALIGN="LEFT"/>test_app_command_invalid_app_label()<br ALIGN="LEFT"/>test_app_command_multiple_apps()<br ALIGN="LEFT"/>test_app_command_no_apps()<br ALIGN="LEFT"/>test_app_command_some_invalid_app_labels()<br ALIGN="LEFT"/>test_base_command()<br ALIGN="LEFT"/>test_base_command_multiple_label()<br ALIGN="LEFT"/>test_base_command_no_label()<br ALIGN="LEFT"/>test_base_command_with_option()<br ALIGN="LEFT"/>test_base_command_with_options()<br ALIGN="LEFT"/>test_base_command_with_wrong_option()<br ALIGN="LEFT"/>test_base_run_from_argv()<br ALIGN="LEFT"/>test_color_style()<br ALIGN="LEFT"/>test_command_color()<br ALIGN="LEFT"/>test_command_no_color()<br ALIGN="LEFT"/>test_custom_stderr()<br ALIGN="LEFT"/>test_custom_stdout()<br ALIGN="LEFT"/>test_help()<br ALIGN="LEFT"/>test_help_alternative()<br ALIGN="LEFT"/>test_help_commands()<br ALIGN="LEFT"/>test_help_short_altert()<br ALIGN="LEFT"/>test_label_command()<br ALIGN="LEFT"/>test_label_command_multiple_label()<br ALIGN="LEFT"/>test_label_command_no_label()<br ALIGN="LEFT"/>test_noargs()<br ALIGN="LEFT"/>test_noargs_with_args()<br ALIGN="LEFT"/>test_requires_model_validation_and_requires_system_checks_both_defined()<br ALIGN="LEFT"/>test_run_from_argv_closes_connections()<br ALIGN="LEFT"/>test_run_from_argv_non_ascii_error()<br ALIGN="LEFT"/>test_specific_help()<br ALIGN="LEFT"/>test_version()<br ALIGN="LEFT"/>test_version_alternative()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"admin_scripts.tests.CustomTestRunner" [color="black", fontcolor="black", label=<{CustomTestRunner|<br ALIGN="LEFT"/>|<I>run_tests</I>(test_labels, extra_tests)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"admin_scripts.tests.DiffSettings" [color="black", fontcolor="black", label=<{DiffSettings|<br ALIGN="LEFT"/>|test_all()<br ALIGN="LEFT"/>test_basic()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"admin_scripts.tests.Discovery" [color="black", fontcolor="black", label=<{Discovery|<br ALIGN="LEFT"/>|test_precedence()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"admin_scripts.tests.DjangoAdminAlternateSettings" [color="black", fontcolor="black", label=<{DjangoAdminAlternateSettings|<br ALIGN="LEFT"/>|setUp()<br ALIGN="LEFT"/>tearDown()<br ALIGN="LEFT"/>test_builtin_command()<br ALIGN="LEFT"/>test_builtin_with_bad_environment()<br ALIGN="LEFT"/>test_builtin_with_bad_settings()<br ALIGN="LEFT"/>test_builtin_with_environment()<br ALIGN="LEFT"/>test_builtin_with_settings()<br ALIGN="LEFT"/>test_custom_command()<br ALIGN="LEFT"/>test_custom_command_with_environment()<br ALIGN="LEFT"/>test_custom_command_with_settings()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"admin_scripts.tests.DjangoAdminDefaultSettings" [color="black", fontcolor="black", label=<{DjangoAdminDefaultSettings|<br ALIGN="LEFT"/>|setUp()<br ALIGN="LEFT"/>tearDown()<br ALIGN="LEFT"/>test_builtin_command()<br ALIGN="LEFT"/>test_builtin_with_bad_environment()<br ALIGN="LEFT"/>test_builtin_with_bad_settings()<br ALIGN="LEFT"/>test_builtin_with_environment()<br ALIGN="LEFT"/>test_builtin_with_settings()<br ALIGN="LEFT"/>test_custom_command()<br ALIGN="LEFT"/>test_custom_command_with_environment()<br ALIGN="LEFT"/>test_custom_command_with_settings()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"admin_scripts.tests.DjangoAdminFullPathDefaultSettings" [color="black", fontcolor="black", label=<{DjangoAdminFullPathDefaultSettings|<br ALIGN="LEFT"/>|setUp()<br ALIGN="LEFT"/>tearDown()<br ALIGN="LEFT"/>test_builtin_command()<br ALIGN="LEFT"/>test_builtin_with_bad_environment()<br ALIGN="LEFT"/>test_builtin_with_bad_settings()<br ALIGN="LEFT"/>test_builtin_with_environment()<br ALIGN="LEFT"/>test_builtin_with_settings()<br ALIGN="LEFT"/>test_custom_command()<br ALIGN="LEFT"/>test_custom_command_with_environment()<br ALIGN="LEFT"/>test_custom_command_with_settings()<br ALIGN="LEFT"/>test_sqlclear_builtin_with_settings()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"admin_scripts.tests.DjangoAdminMinimalSettings" [color="black", fontcolor="black", label=<{DjangoAdminMinimalSettings|<br ALIGN="LEFT"/>|setUp()<br ALIGN="LEFT"/>tearDown()<br ALIGN="LEFT"/>test_builtin_command()<br ALIGN="LEFT"/>test_builtin_with_bad_environment()<br ALIGN="LEFT"/>test_builtin_with_bad_settings()<br ALIGN="LEFT"/>test_builtin_with_environment()<br ALIGN="LEFT"/>test_builtin_with_settings()<br ALIGN="LEFT"/>test_custom_command()<br ALIGN="LEFT"/>test_custom_command_with_environment()<br ALIGN="LEFT"/>test_custom_command_with_settings()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"admin_scripts.tests.DjangoAdminMultipleSettings" [color="black", fontcolor="black", label=<{DjangoAdminMultipleSettings|<br ALIGN="LEFT"/>|setUp()<br ALIGN="LEFT"/>tearDown()<br ALIGN="LEFT"/>test_builtin_command()<br ALIGN="LEFT"/>test_builtin_with_bad_environment()<br ALIGN="LEFT"/>test_builtin_with_bad_settings()<br ALIGN="LEFT"/>test_builtin_with_environment()<br ALIGN="LEFT"/>test_builtin_with_settings()<br ALIGN="LEFT"/>test_custom_command()<br ALIGN="LEFT"/>test_custom_command_with_environment()<br ALIGN="LEFT"/>test_custom_command_with_settings()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"admin_scripts.tests.DjangoAdminNoSettings" [color="black", fontcolor="black", label=<{DjangoAdminNoSettings|<br ALIGN="LEFT"/>|test_builtin_command()<br ALIGN="LEFT"/>test_builtin_with_bad_environment()<br ALIGN="LEFT"/>test_builtin_with_bad_settings()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"admin_scripts.tests.DjangoAdminSettingsDirectory" [color="black", fontcolor="black", label=<{DjangoAdminSettingsDirectory|<br ALIGN="LEFT"/>|setUp()<br ALIGN="LEFT"/>tearDown()<br ALIGN="LEFT"/>test_builtin_command()<br ALIGN="LEFT"/>test_builtin_with_bad_environment()<br ALIGN="LEFT"/>test_builtin_with_bad_settings()<br ALIGN="LEFT"/>test_builtin_with_environment()<br ALIGN="LEFT"/>test_builtin_with_settings()<br ALIGN="LEFT"/>test_custom_command()<br ALIGN="LEFT"/>test_setup_environ()<br ALIGN="LEFT"/>test_setup_environ_custom_template()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"admin_scripts.tests.Dumpdata" [color="black", fontcolor="black", label=<{Dumpdata|<br ALIGN="LEFT"/>|setUp()<br ALIGN="LEFT"/>tearDown()<br ALIGN="LEFT"/>test_pks_parsing()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"admin_scripts.tests.ManageAlternateSettings" [color="black", fontcolor="black", label=<{ManageAlternateSettings|<br ALIGN="LEFT"/>|setUp()<br ALIGN="LEFT"/>tearDown()<br ALIGN="LEFT"/>test_builtin_command()<br ALIGN="LEFT"/>test_builtin_with_bad_environment()<br ALIGN="LEFT"/>test_builtin_with_bad_settings()<br ALIGN="LEFT"/>test_builtin_with_environment()<br ALIGN="LEFT"/>test_builtin_with_settings()<br ALIGN="LEFT"/>test_custom_command()<br ALIGN="LEFT"/>test_custom_command_output_color()<br ALIGN="LEFT"/>test_custom_command_with_environment()<br ALIGN="LEFT"/>test_custom_command_with_settings()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"admin_scripts.tests.ManageCheck" [color="black", fontcolor="black", label=<{ManageCheck|<br ALIGN="LEFT"/>|tearDown()<br ALIGN="LEFT"/>test_app_with_import()<br ALIGN="LEFT"/>test_broken_app()<br ALIGN="LEFT"/>test_complex_app()<br ALIGN="LEFT"/>test_nonexistent_app()<br ALIGN="LEFT"/>test_output_format()<br ALIGN="LEFT"/>test_warning_does_not_halt()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"admin_scripts.tests.ManageDefaultSettings" [color="black", fontcolor="black", label=<{ManageDefaultSettings|<br ALIGN="LEFT"/>|setUp()<br ALIGN="LEFT"/>tearDown()<br ALIGN="LEFT"/>test_builtin_command()<br ALIGN="LEFT"/>test_builtin_with_bad_environment()<br ALIGN="LEFT"/>test_builtin_with_bad_settings()<br ALIGN="LEFT"/>test_builtin_with_environment()<br ALIGN="LEFT"/>test_builtin_with_settings()<br ALIGN="LEFT"/>test_custom_command()<br ALIGN="LEFT"/>test_custom_command_with_environment()<br ALIGN="LEFT"/>test_custom_command_with_settings()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"admin_scripts.tests.ManageFullPathDefaultSettings" [color="black", fontcolor="black", label=<{ManageFullPathDefaultSettings|<br ALIGN="LEFT"/>|setUp()<br ALIGN="LEFT"/>tearDown()<br ALIGN="LEFT"/>test_builtin_command()<br ALIGN="LEFT"/>test_builtin_with_bad_environment()<br ALIGN="LEFT"/>test_builtin_with_bad_settings()<br ALIGN="LEFT"/>test_builtin_with_environment()<br ALIGN="LEFT"/>test_builtin_with_settings()<br ALIGN="LEFT"/>test_custom_command()<br ALIGN="LEFT"/>test_custom_command_with_environment()<br ALIGN="LEFT"/>test_custom_command_with_settings()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"admin_scripts.tests.ManageMinimalSettings" [color="black", fontcolor="black", label=<{ManageMinimalSettings|<br ALIGN="LEFT"/>|setUp()<br ALIGN="LEFT"/>tearDown()<br ALIGN="LEFT"/>test_builtin_command()<br ALIGN="LEFT"/>test_builtin_with_bad_environment()<br ALIGN="LEFT"/>test_builtin_with_bad_settings()<br ALIGN="LEFT"/>test_builtin_with_environment()<br ALIGN="LEFT"/>test_builtin_with_settings()<br ALIGN="LEFT"/>test_custom_command()<br ALIGN="LEFT"/>test_custom_command_with_environment()<br ALIGN="LEFT"/>test_custom_command_with_settings()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"admin_scripts.tests.ManageMultipleSettings" [color="black", fontcolor="black", label=<{ManageMultipleSettings|<br ALIGN="LEFT"/>|setUp()<br ALIGN="LEFT"/>tearDown()<br ALIGN="LEFT"/>test_builtin_command()<br ALIGN="LEFT"/>test_builtin_with_bad_environment()<br ALIGN="LEFT"/>test_builtin_with_bad_settings()<br ALIGN="LEFT"/>test_builtin_with_environment()<br ALIGN="LEFT"/>test_builtin_with_settings()<br ALIGN="LEFT"/>test_custom_command()<br ALIGN="LEFT"/>test_custom_command_with_environment()<br ALIGN="LEFT"/>test_custom_command_with_settings()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"admin_scripts.tests.ManageNoSettings" [color="black", fontcolor="black", label=<{ManageNoSettings|<br ALIGN="LEFT"/>|test_builtin_command()<br ALIGN="LEFT"/>test_builtin_with_bad_environment()<br ALIGN="LEFT"/>test_builtin_with_bad_settings()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"admin_scripts.tests.ManageRunserver" [color="black", fontcolor="black", label=<{ManageRunserver|cmd<br ALIGN="LEFT"/>|assertServerSettings(addr, port, ipv6, raw_ipv6)<br ALIGN="LEFT"/>setUp()<br ALIGN="LEFT"/>test_runner_addrport_ipv6()<br ALIGN="LEFT"/>test_runner_ambiguous()<br ALIGN="LEFT"/>test_runner_hostname()<br ALIGN="LEFT"/>test_runner_hostname_ipv6()<br ALIGN="LEFT"/>test_runserver_addrport()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"admin_scripts.tests.ManageRunserverEmptyAllowedHosts" [color="black", fontcolor="black", label=<{ManageRunserverEmptyAllowedHosts|<br ALIGN="LEFT"/>|setUp()<br ALIGN="LEFT"/>tearDown()<br ALIGN="LEFT"/>test_empty_allowed_hosts_error()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"admin_scripts.tests.ManageSettingsWithSettingsErrors" [color="black", fontcolor="black", label=<{ManageSettingsWithSettingsErrors|<br ALIGN="LEFT"/>|tearDown()<br ALIGN="LEFT"/>test_attribute_error()<br ALIGN="LEFT"/>test_help()<br ALIGN="LEFT"/>test_import_error()<br ALIGN="LEFT"/>test_key_error()<br ALIGN="LEFT"/>write_settings_with_import_error(filename)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"admin_scripts.tests.ManageTestCommand" [color="black", fontcolor="black", label=<{ManageTestCommand|cmd<br ALIGN="LEFT"/>|setUp()<br ALIGN="LEFT"/>test_liveserver()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"admin_scripts.tests.ManageTestserver" [color="black", fontcolor="black", label=<{ManageTestserver|<br ALIGN="LEFT"/>|test_testserver_handle_params(mock_handle)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"admin_scripts.tests.StartProject" [color="black", fontcolor="black", label=<{StartProject|available_apps : list<br ALIGN="LEFT"/>|test_custom_project_destination_missing()<br ALIGN="LEFT"/>test_custom_project_template()<br ALIGN="LEFT"/>test_custom_project_template_context_variables()<br ALIGN="LEFT"/>test_custom_project_template_from_tarball_by_path()<br ALIGN="LEFT"/>test_custom_project_template_from_tarball_by_url()<br ALIGN="LEFT"/>test_custom_project_template_from_tarball_to_alternative_location()<br ALIGN="LEFT"/>test_custom_project_template_with_non_ascii_templates()<br ALIGN="LEFT"/>test_file_without_extension()<br ALIGN="LEFT"/>test_invalid_project_name()<br ALIGN="LEFT"/>test_no_escaping_of_project_variables()<br ALIGN="LEFT"/>test_project_template_tarball_url()<br ALIGN="LEFT"/>test_simple_project()<br ALIGN="LEFT"/>test_simple_project_different_directory()<br ALIGN="LEFT"/>test_template_dir_with_trailing_slash()<br ALIGN="LEFT"/>test_wrong_args()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"admin_scripts.tests.ArgumentOrder" -> "admin_scripts.tests.AdminScriptTestCase" [arrowhead="empty", arrowtail="none"];
"admin_scripts.tests.CommandTypes" -> "admin_scripts.tests.AdminScriptTestCase" [arrowhead="empty", arrowtail="none"];
"admin_scripts.tests.DiffSettings" -> "admin_scripts.tests.AdminScriptTestCase" [arrowhead="empty", arrowtail="none"];
"admin_scripts.tests.DjangoAdminAlternateSettings" -> "admin_scripts.tests.AdminScriptTestCase" [arrowhead="empty", arrowtail="none"];
"admin_scripts.tests.DjangoAdminDefaultSettings" -> "admin_scripts.tests.AdminScriptTestCase" [arrowhead="empty", arrowtail="none"];
"admin_scripts.tests.DjangoAdminFullPathDefaultSettings" -> "admin_scripts.tests.AdminScriptTestCase" [arrowhead="empty", arrowtail="none"];
"admin_scripts.tests.DjangoAdminMinimalSettings" -> "admin_scripts.tests.AdminScriptTestCase" [arrowhead="empty", arrowtail="none"];
"admin_scripts.tests.DjangoAdminMultipleSettings" -> "admin_scripts.tests.AdminScriptTestCase" [arrowhead="empty", arrowtail="none"];
"admin_scripts.tests.DjangoAdminNoSettings" -> "admin_scripts.tests.AdminScriptTestCase" [arrowhead="empty", arrowtail="none"];
"admin_scripts.tests.DjangoAdminSettingsDirectory" -> "admin_scripts.tests.AdminScriptTestCase" [arrowhead="empty", arrowtail="none"];
"admin_scripts.tests.Dumpdata" -> "admin_scripts.tests.AdminScriptTestCase" [arrowhead="empty", arrowtail="none"];
"admin_scripts.tests.ManageAlternateSettings" -> "admin_scripts.tests.AdminScriptTestCase" [arrowhead="empty", arrowtail="none"];
"admin_scripts.tests.ManageCheck" -> "admin_scripts.tests.AdminScriptTestCase" [arrowhead="empty", arrowtail="none"];
"admin_scripts.tests.ManageDefaultSettings" -> "admin_scripts.tests.AdminScriptTestCase" [arrowhead="empty", arrowtail="none"];
"admin_scripts.tests.ManageFullPathDefaultSettings" -> "admin_scripts.tests.AdminScriptTestCase" [arrowhead="empty", arrowtail="none"];
"admin_scripts.tests.ManageMinimalSettings" -> "admin_scripts.tests.AdminScriptTestCase" [arrowhead="empty", arrowtail="none"];
"admin_scripts.tests.ManageMultipleSettings" -> "admin_scripts.tests.AdminScriptTestCase" [arrowhead="empty", arrowtail="none"];
"admin_scripts.tests.ManageNoSettings" -> "admin_scripts.tests.AdminScriptTestCase" [arrowhead="empty", arrowtail="none"];
"admin_scripts.tests.ManageRunserver" -> "admin_scripts.tests.AdminScriptTestCase" [arrowhead="empty", arrowtail="none"];
"admin_scripts.tests.ManageRunserverEmptyAllowedHosts" -> "admin_scripts.tests.AdminScriptTestCase" [arrowhead="empty", arrowtail="none"];
"admin_scripts.tests.ManageSettingsWithSettingsErrors" -> "admin_scripts.tests.AdminScriptTestCase" [arrowhead="empty", arrowtail="none"];
"admin_scripts.tests.ManageTestCommand" -> "admin_scripts.tests.AdminScriptTestCase" [arrowhead="empty", arrowtail="none"];
"admin_scripts.tests.ManageTestserver" -> "admin_scripts.tests.AdminScriptTestCase" [arrowhead="empty", arrowtail="none"];
"admin_scripts.tests.StartProject" -> "admin_scripts.tests.AdminScriptTestCase" [arrowhead="empty", arrowtail="none"];
}
